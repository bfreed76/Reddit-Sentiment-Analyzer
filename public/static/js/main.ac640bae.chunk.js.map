{"version":3,"sources":["context/Context.js","Components/Login.js","Components/Signup.js","Components/Profile.js","Components/LoginOrSignup.js","Components/HeaderComp.js","Components/EmoDocResults.js","Components/EmoTargResults.js","Components/TopContentCard.js","Components/MySearches.js","Components/UpdateSuccessful.js","Components/Search.js","Components/TopContent.js","Components/ResultsHeader.js","Components/ResultsCard.js","Components/ResultsContainer.js","SampleTopContent2.jpg","Components/SampleContent.js","App.js","reportWebVitals.js","index.js"],"names":["Context","createContext","ContextProvider","props","useState","user","setUser","loggedin","setLoggedin","results","setResults","sUsername","setSUsername","subreddit","setSubreddit","searchTerms","setSearchTerms","searchTarget","setSearchTarget","store","isUpdating","setIsUpdating","Provider","value","children","Login","email","setEmail","password","setPassword","success","setSuccess","useContext","history","useHistory","Form","onSubmit","e","preventDefault","postObj","method","headers","body","JSON","stringify","fetch","then","r","json","id","push","catch","err","console","log","Field","placeholder","onChange","target","type","className","Button","primary","Signup","username","setUsername","useEffect","onClick","res","style","textAlign","Profile","handleLogout","renderUpdatePage","LoginOrSignup","to","HeaderComp","findMe","visible","setVisible","toggleVisibility","Header","as","Content","Icon","name","Divider","hidden","Transition","animation","duration","EmoDocResults","emoDoc","emotion","data","Score","sadness","joy","fear","disgust","anger","renderBarChart","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","domain","Tooltip","Bar","fill","EmoTargResults","targ","uv","fontSize","text","TopContentCard","item","search_results","emo_doc_json","emoTarg","emo_search_json","sentDoc","sent_doc_json","location","useLocation","horizontal","Table","unstackable","Body","Row","pathname","Cell","created_at","slice","author","search_term","score","label","map","MySearches","mySearches","setMySearches","getMySearches","length","UpdateSuccessful","Search","error","setError","loading","setloading","pushShiftURL","Segment","Dimmer","active","inverted","Loader","url","ok","errorData","errors","Input","icon","iconPosition","color","TopContent","topContent","setTopContent","getTopContent","ResultsHeader","fontWeight","sentimentDocument","emotionDocument","emotionTarget","ResultsCard","result","link","permalink","Card","Group","itemsPerRow","centered","href","header","description","extra","ResultsContainer","SampleContent","Image","src","SampleTopContent2","fluid","App","window","reload","panes","menuItem","NavLink","content","exact","key","render","path","Tab","Pane","defaultActiveIndex","findIndex","pane","matchPath","handleUpdate","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac640bae.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const Context = createContext();\nconst ContextProvider = (props) => {\n  const [user, setUser] = useState({});\n  const [loggedin, setLoggedin] = useState(false);\n  const [results, setResults] = useState();\n  const [sUsername, setSUsername] = useState(\"\");\n  const [subreddit, setSubreddit] = useState(\"\");\n  const [searchTerms, setSearchTerms] = useState(\"\");\n  const [searchTarget, setSearchTarget] = useState(\"comment\");\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  // Context 'store'\n\n  const store = {\n    user,\n    setUser,\n    loggedin,\n    setLoggedin,\n    results,\n    setResults,\n    sUsername,\n    setSUsername,\n    subreddit,\n    setSubreddit,\n    searchTerms,\n    setSearchTerms,\n    searchTarget,\n    setSearchTarget,\n    isUpdating,\n    setIsUpdating\n  };\n\n  // Wrapped contenxt provider component at Index.js\n  return <Context.Provider value={store}>{props.children}</Context.Provider>;\n};\n\nexport default ContextProvider;\n","import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [success, setSuccess] = useState(true);\n  const { setUser, setLoggedin, setIsUpdating } = useContext(Context);\n  let history = useHistory();\n\n  // Login\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const postObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    };\n    fetch(\"/api/login\", postObj)\n      .then((r) => r.json())\n      .then((user) => {\n        if (!!user.id) {\n          setUser(user);\n          setLoggedin(true);\n          setSuccess(true);\n          history.push(\"success\");\n        } else {\n          setSuccess(false);\n        }\n      })\n      .catch((err) => console.log(\"error =\", err));\n  };\n\n  // Renders forms with toggle for signin/signup\n  return (\n    <div>\n      {setIsUpdating(false)}\n      <Form onSubmit={handleLogin}>\n        <Form.Field>\n          <label>Email</label>\n          <input placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\n        </Form.Field>\n        <Form.Field>\n          <label>Password</label>\n          <input\n            placeholder='password'\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Field>\n        {success ? null : <h3 className='Alert'>Wrong email or password.</h3>}\n        <Button primary type='submit'>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Context } from \"../context/Context\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form } from \"semantic-ui-react\";\n\nconst Signup = () => {\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const { user, setUser, loggedin, setLoggedin, isUpdating, setIsUpdating } = useContext(Context);\n\n  // Sets local state to global state on component render\n\n  useEffect(() => {\n    setUsername(user.username);\n    setEmail(user.email);\n  }, [user.username, user.email]);\n\n  // Handles signup with input error handling\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n    if (!username || !email || !password) {\n      return console.log(\"field(s) missing\");\n    }\n    fetch(\"/api/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, email, password }),\n    })\n      .then((r) => r.json())\n      .then((user) => {\n        setUser(user);\n        setLoggedin(true);\n        history.push(\"success\");\n      })\n      .catch((err) => console.log(\"error =\", err));\n  };\n\n  // Handles update of user profile information\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    fetch(\"/api/update\", {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, email }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setIsUpdating(false);\n        history.push(\"success\");\n      })\n      .catch((err) => console.log(\"Error = \", err));\n  };\n\n  // Renders either login or signup information depending on state\n\n  return (\n    <div>\n      {!loggedin ? setIsUpdating(false) : null}\n      <Form onSubmit={handleSignup}>\n        <Form.Field>\n          <label>Username</label>\n          <input\n            placeholder='Username'\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Email</label>\n          <input placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\n        </Form.Field>\n        {isUpdating ? (\n          <>\n            <h3>Please enter new username or email.</h3>\n          </>\n        ) : (\n          <Form.Field>\n            <label>Password</label>\n            <input\n              placeholder='password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Field>\n        )}\n        <Form.Field></Form.Field>\n        {isUpdating ? (\n          <Button primary onClick={handleUpdate}>\n            Update\n          </Button>\n        ) : (\n          <>\n            <p style={{ textAlign: \"right\" }}>* All fields required</p>\n            <Button primary type='submit'>\n              Signup\n            </Button>\n          </>\n        )}\n      </Form>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../context/Context\";\nimport { Button } from \"semantic-ui-react\";\nimport Login from \"./Login\";\n\nconst Profile = ({ handleLogout, renderUpdatePage }) => {\n  const { user, loggedin } = useContext(Context);\n\n  // Render profile info or login/signup prompt\n\n  return (\n    <div>\n      {loggedin ? (\n        <div>\n          <h3>Username: {user.username} </h3>\n          <h3>email: {user.email}</h3>\n          <Button primary onClick={renderUpdatePage}>\n            Update\n          </Button>\n          <Button primary onClick={handleLogout}>\n            Logout\n          </Button>\n        </div>\n      ) : (\n        <Login />\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Login/signup prompt\n\nconst LoginOrSignup = () => {\n  return (\n    <div>\n      <div className='Link'>\n        <Link to='/login'>Login</Link> | <Link to='/signup'>Sign Up</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginOrSignup;\n","import React, { useContext } from \"react\";\nimport { Icon, Header } from \"semantic-ui-react\";\nimport { Divider, Transition } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Profile from \"./Profile\";\nimport LoginOrSignup from \"./LoginOrSignup\";\nimport { Context } from \"../context/Context\";\n\nconst HeaderComp = ({ handleLogout, findMe }) => {\n  const { loggedin, setIsUpdating } = useContext(Context);\n  const [visible, setVisible] = useState(false);\n  let history = useHistory();\n\n  // Toggles profile/login visibility\n\n  const toggleVisibility = () => {\n    findMe();\n    setVisible(!visible);\n  };\n\n  // Helper that toggles update state and visibility\n\n  const renderUpdatePage = () => {\n    setIsUpdating(true);\n    toggleVisibility();\n    history.push(\"/signup\");\n  };\n\n  // Renders header, toggles profile and login/signup\n\n  return (\n    <div>\n      <Header as='h1'>\n        <Header.Content>\n          <div as='h1.ui.header'>\n            <Icon name='reddit' />\n            <big>Emot/r</big>\n            <Icon id='userIcon' name='user outline' onClick={toggleVisibility} />\n          </div>\n        </Header.Content>\n      </Header>\n      <Divider hidden />\n      <Transition visible={visible} animation='fade' duration={300}>\n        <div>\n          {loggedin ? (\n            <Profile handleLogout={handleLogout} renderUpdatePage={renderUpdatePage} />\n          ) : (\n            <LoginOrSignup />\n          )}\n        </div>\n      </Transition>\n    </div>\n  );\n};\n\nexport default HeaderComp;\n","import React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\n\nconst EmoDocResults = ({ emoDoc }) => {\n  const { sadness, joy, fear, disgust, anger } = emoDoc.emotion;\n\n  // Assigns chart values to results data from Watson\n\n  const data = [\n    { name: \"Sadness\", Score: sadness },\n    { name: \"Joy\", Score: joy },\n    { name: \"Fear\", Score: fear },\n    { name: \"Disgust\", Score: disgust },\n    { name: \"Anger\", Score: anger },\n  ];\n\n  // Renders chart\n\n  const renderBarChart = (\n    <BarChart\n      width={325}\n      height={250}\n      data={data}\n      margin={{\n        top: 5,\n        right: 5,\n        left: 0,\n        bottom: 5,\n      }}>\n      <CartesianGrid strokeDasharray='3 3' />\n      <XAxis dataKey='name' />\n      <YAxis type='number' domain={[0, 1]} />\n      <Tooltip />\n      <Bar dataKey='Score' fill='#8884d8' />\n    </BarChart>\n  );\n\n  return (\n    <div>\n      <p>Emotional score overall </p>\n      {renderBarChart}\n    </div>\n  );\n};\n\nexport default EmoDocResults;\n","import React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\n\nconst EmoTargResults = ({ targ }) => {\n  const { sadness, joy, fear, disgust, anger } = targ.emotion;\n\n  // Assigns chart values to results data from Watson\n\n  const data = [\n    { name: \"Sadness\", uv: sadness },\n    { name: \"Joy\", uv: joy },\n    { name: \"Fear\", uv: fear },\n    { name: \"Disgust\", uv: disgust },\n    { name: \"Anger\", uv: anger },\n  ];\n\n  // Renders chart\n\n  const renderBarChart = (\n    <BarChart\n      width={325}\n      height={250}\n      data={data}\n      margin={{\n        top: 5,\n        right: 5,\n        left: 0,\n        bottom: 5,\n      }}>\n      <CartesianGrid strokeDasharray='1 3' />\n      <XAxis dataKey='name' fontSize='15' />\n      <YAxis type='number' domain={[0, 1]} />\n      <Tooltip />\n      <Bar dataKey='uv' fill='#3884d8' />\n    </BarChart>\n  );\n\n  return (\n    <div className='rechats-wrapper'>\n      <p>\n        Emotional score for <strong>{targ.text}</strong>\n      </p>\n      {renderBarChart}\n    </div>\n  );\n};\n\nexport default EmoTargResults;\n","import React from \"react\";\nimport { Divider, Header, Icon, Table } from \"semantic-ui-react\";\nimport EmoDocResults from \"./EmoDocResults\";\nimport EmoTargResults from \"./EmoTargResults\";\nimport { useLocation } from \"react-router-dom\";\n\nconst TopContentCard = ({ item }) => {\n  // Assigns variables to data object from backend\n\n  const emoDoc = item.search_results[0].emo_doc_json;\n  const emoTarg = item.search_results[0].emo_search_json;\n  const sentDoc = item.search_results[0].sent_doc_json;\n  const location = useLocation();\n\n  // Renders search results, toggles render of 'search term' results\n  // debugger;\n  return (\n    <div>\n      <Divider horizontal>\n        <Header as='h3'>\n          <Icon name='search' />\n          Search Info\n        </Header>\n      </Divider>\n      <Table unstackable={true}>\n        <Table.Body>\n          <Table.Row textAlign='center'>\n            {location.pathname === \"/top_content\" ? (\n              <>\n                <Table.Cell>Username:</Table.Cell>\n                <Table.Cell>\n                  <strong>{item.user.username}</strong>\n                </Table.Cell>{\" \"}\n              </>\n            ) : (\n              <>\n                <Table.Cell>Date:</Table.Cell>\n                <Table.Cell>\n                  <strong>{item.created_at.slice(0, 10)}</strong>\n                </Table.Cell>\n              </>\n            )}\n            <Table.Cell>Reddit User:</Table.Cell>\n            <Table.Cell>\n              <strong>{item.author.name}</strong>\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row textAlign='center'>\n            <Table.Cell>Subreddit:</Table.Cell>\n            <Table.Cell>\n              <strong>{item.subreddit.name}</strong>\n            </Table.Cell>\n            <Table.Cell>Topic:</Table.Cell>\n            <Table.Cell>\n              <strong>{item.search_term.search_term}</strong>\n            </Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n      <Divider horizontal>\n        <Header as='h3'>\n          <Icon name='bar chart' />\n          Results\n        </Header>\n      </Divider>\n      <h3>\n        Overall Sentiment Score: {sentDoc.score} ({sentDoc.label})\n      </h3>\n      <div className='emoDocResults'>\n        <EmoDocResults emoDoc={emoDoc}></EmoDocResults>\n        {emoTarg\n          ? emoTarg.map((targ, id) => {\n              return <EmoTargResults key={id} targ={targ} />;\n            })\n          : null}\n      </div>\n      <br></br>\n      <br></br>\n    </div>\n  );\n};\n\nexport default TopContentCard;\n","import React, { useState, useEffect } from \"react\";\nimport TopContentCard from \"./TopContentCard\";\n\nconst MySearches = () => {\n  const [mySearches, setMySearches] = useState([]);\n\n  // Populates tab with most recent searches from all users\n\n  useEffect(() => {\n    getMySearches();\n  }, []);\n\n  const getMySearches = () => {\n    fetch(\"/api/my_searches\")\n      .then((res) => res.json())\n      .then((data) => {\n        setMySearches(data);\n      })\n      .catch((err) => console.log(\"error =\", err));\n  };\n\n  // Renders result cards\n\n  return (\n    <div>\n      {mySearches.length > 1 ? (\n        mySearches.map((item, id) => {\n          return <TopContentCard key={id} item={item} />;\n        })\n      ) : (\n        <h3>No search results available</h3>\n      )}\n    </div>\n  );\n};\n\nexport default MySearches;\n","import React, { useEffect, useContext } from \"react\";\nimport { Context } from \"../context/Context\";\n\nconst UpdateSuccessful = ({ findMe }) => {\n  const { user } = useContext(Context);\n\n  // Authenticates user with updated profile data\n\n  useEffect(() => {\n    findMe();\n  }, []);\n\n  // Success message\n\n  return (\n    <div>\n      <h2>Welcome {user.username}.</h2>\n      <h3>Click a tab to continue.</h3>\n    </div>\n  );\n};\n\nexport default UpdateSuccessful;\n","import React, { useState, useContext } from \"react\";\nimport { Button, Form, Input, Dimmer, Loader, Segment } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../context/Context\";\n\nconst Search = () => {\n  const history = useHistory();\n  const [error, setError] = useState(false);\n  const [loading, setloading] = useState(false);\n  const {\n    user,\n    setResults,\n    sUsername,\n    setSUsername,\n    subreddit,\n    setSubreddit,\n    searchTerms,\n    setSearchTerms,\n    searchTarget,\n  } = useContext(Context);\n\n  // Builds URL for pushshift api request\n\n  let pushShiftURL =\n    \"https://api.pushshift.io/reddit/search/\" +\n    searchTarget +\n    \"/?q=\" +\n    searchTerms +\n    \"&subreddit=\" +\n    subreddit +\n    \"&author=\" +\n    sUsername +\n    \"&fields=author,created_utc,body,score,subreddit,url,title,selftext,permalink\" +\n    \"&size=\" +\n    \"50\";\n\n  // Sends state (Reddit search) to backend for fetch from pushshift api and Watson analysis\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setloading(true);\n    const postObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: user,\n        url: pushShiftURL,\n        sUsername,\n        subreddit,\n        searchTerms,\n      }),\n    };\n    fetch(\"/api/reddit\", postObj).then((res) => {\n      if (res.ok) {\n        res.json().then((res) => {\n          setResults(res);\n          setError(false);\n          history.push(\"/results\");\n        });\n      } else {\n        res.json().then((errorData) => {\n          console.log(\"error = \", errorData.errors);\n          setError(true);\n        });\n      }\n    });\n  };\n\n  // Landing page with search forms and error handling\n\n  return (\n    <Segment>\n      {loading ? (\n        <Dimmer active inverted>\n          <Loader>Analyzing...</Loader>\n        </Dimmer>\n      ) : null}\n      <Form onSubmit={handleSearch}>\n        <h2>Discover emotional content on Reddit.</h2>\n        <Form.Field>\n          <Input\n            icon='search'\n            iconPosition='left'\n            placeholder='u/ username'\n            value={sUsername}\n            onChange={(e) => setSUsername(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            icon='search'\n            iconPosition='left'\n            placeholder='r/ subreddit'\n            value={subreddit}\n            onChange={(e) => setSubreddit(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            icon='search'\n            iconPosition='left'\n            placeholder='search terms'\n            value={searchTerms}\n            onChange={(e) => setSearchTerms(e.target.value)}\n          />\n          {error ? <h4 style={{ color: \"red\" }}>No Results Found. Please Search Again.</h4> : null}\n        </Form.Field>\n        <br></br>\n        <Button primary type='submit'>\n          Search\n        </Button>\n      </Form>\n    </Segment>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport TopContentCard from \"./TopContentCard\";\n\nconst TopContent = () => {\n  const [topContent, setTopContent] = useState([]);\n\n  // Fetches most recent content on component render\n\n  useEffect(() => {\n    getTopContent();\n  }, []);\n\n  const getTopContent = () => {\n    fetch(\"/api/top_content\")\n      .then((res) => res.json())\n      .then((data) => {\n        setTopContent(data);\n      })\n      .catch((err) => console.log(\"error =\", err));\n  };\n\n  // Renders recent content cards\n\n  return (\n    <div>\n      {topContent.map((item, id) => {\n        return <TopContentCard key={id} item={item} />;\n      })}\n    </div>\n  );\n};\n\nexport default TopContent;\n","import React, { useContext } from \"react\";\nimport { Divider, Header, Icon, Table } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\nimport EmoDocResults from \"./EmoDocResults\";\nimport EmoTargResults from \"./EmoTargResults\";\n\nconst ResultsHeader = () => {\n  const { results, sUsername, subreddit, searchTerms } = useContext(Context);\n\n  // Renders search results header, toggles render of 'search term' results\n\n  return (\n    <div>\n      <Divider horizontal>\n        <Header as='h3'>\n          <Icon name='search' />\n          Search Info\n        </Header>\n      </Divider>\n      <Table unstackable={true}>\n        <Table.Body>\n          <Table.Row textAlign='left' style={{ fontWeight: \"bold\" }}>\n            <Table.Cell className='cellLabel'>Reddit User:</Table.Cell>\n            <Table.Cell>{sUsername ? sUsername : \"-\"}</Table.Cell>\n            <Table.Cell className='cellLabel'>Subreddit:</Table.Cell>\n            <Table.Cell>{subreddit ? subreddit : \"-\"}</Table.Cell>\n            <Table.Cell className='cellLabel'>Topic:</Table.Cell>\n            <Table.Cell>{searchTerms ? searchTerms : \"-\"}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n      <Divider horizontal>\n        <Header as='h3'>\n          <Icon name='bar chart' />\n          Results\n        </Header>\n      </Divider>\n      <h3>\n        Overall Sentiment Score: {results.sentimentDocument.score} (\n        {results.sentimentDocument.label})\n      </h3>\n      <div className='emoDocResults'>\n        <EmoDocResults emoDoc={results.emotionDocument}></EmoDocResults>\n        {!!results.emotionTarget\n          ? results.emotionTarget.map((targ, id) => {\n              return <EmoTargResults key={id} targ={targ}></EmoTargResults>;\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsHeader;\n","import { Card } from \"semantic-ui-react\";\nimport React from \"react\";\n\nconst ResultsCard = ({ result }) => {\n  const link = `http://www.reddit.com` + result.permalink;\n\n  // Renders and links to Reddit comments found by pushshift api\n\n  return (\n    <Card.Group itemsPerRow={1}>\n      <Card centered href={link} target='_blank'>\n        <Card.Content textAlign='left' header={result.author + \" says...\"} />\n        <Card.Content textAlign='left' description={result.body} />\n        <Card.Content extra>Subreddit: {result.subreddit}</Card.Content>\n      </Card>\n      <br></br>\n    </Card.Group>\n  );\n};\n\nexport default ResultsCard;\n","import React, { useContext } from \"react\";\nimport { Context } from \"../context/Context\";\nimport ResultsHeader from \"./ResultsHeader\";\nimport ResultsCard from \"./ResultsCard\";\n\nconst ResultsContainer = () => {\n  const { results } = useContext(Context);\n\n  // Renders results header and results cards with error handling\n\n  return (\n    <div className='results'>\n      {!!results ? (\n        <div>\n          <ResultsHeader />\n          {results.data.map((result, id) => {\n            return <ResultsCard key={id} result={result} />;\n          })}\n        </div>\n      ) : (\n        <h3>Results not available. Please try your search again. </h3>\n      )}\n    </div>\n  );\n};\n\nexport default ResultsContainer;\n","export default __webpack_public_path__ + \"static/media/SampleTopContent2.3e3adb3d.jpg\";","import React from \"react\";\nimport SampleTopContent2 from \"../SampleTopContent2.jpg\";\nimport { Image } from \"semantic-ui-react\";\nimport LoginOrSignup from \"./LoginOrSignup\";\n\n// Renders \"Most Recent\" landing page for unauthenticated users\n\nconst SampleContent = () => {\n  return (\n    <div>\n      <h1 style={{ textAlign: \"left\" }}>Just a sample...</h1>\n      <hr></hr>\n      <Image src={SampleTopContent2} fluid />\n      <hr></hr>\n      <h1>Login to view!</h1>\n      <LoginOrSignup />\n    </div>\n  );\n};\n\nexport default SampleContent;\n","import \"./App.css\";\nimport { Tab } from \"semantic-ui-react\";\nimport Login from \"./Components/Login\";\nimport Signup from \"./Components/Signup\";\nimport Profile from \"./Components/Profile\";\nimport { Context } from \"./context/Context\";\nimport { useContext, useEffect } from \"react\";\nimport HeaderComp from \"./Components/HeaderComp\";\nimport MySearches from \"./Components/MySearches\";\nimport UpdateSuccessful from \"./Components/UpdateSuccessful\";\nimport Search from \"./Components/Search\";\nimport TopContent from \"./Components/TopContent\";\nimport ResultsContainer from \"./Components/ResultsContainer\";\nimport SampleContent from \"./Components/SampleContent\";\nimport { BrowserRouter, Route, Switch, useHistory, matchPath, NavLink } from \"react-router-dom\";\n\nconst App = () => {\n  const { setUser, loggedin, setLoggedin } = useContext(Context);\n  const history = useHistory();\n\n  // Checks user authentication\n\n  useEffect(() => {\n    findMe();\n  }, []);\n\n  const findMe = () => {\n    fetch(\"/api/me\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.error) {\n          setUser(data);\n          setLoggedin(true);\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => console.log(\"error =\", err));\n  };\n\n  // Logout\n\n  const handleLogout = () => {\n    fetch(\"/api/logout\", {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoggedin(false);\n        setUser({});\n        window.location.reload();\n      })\n      .catch((err) => console.log(\"error =\",err));\n  };\n\n  // Routes to signup component\n\n  const handleUpdate = () => {\n    history.push(\"/signup\");\n  };\n\n  // Three Semantic UI tabs for primary interface/app body\n\n  const panes = [\n    {\n      menuItem: {\n        as: NavLink,\n        content: \"Most Recent\",\n        to: \"/top_content\",\n        exact: true,\n        key: \"top_content\",\n      },\n      render: () => (\n        <Route path='/top_content' exact>\n          <Tab.Pane>\n            <div>\n              {loggedin ? (\n                <TopContent />\n              ) : (\n                <div>\n                  <SampleContent />\n                </div>\n              )}\n            </div>\n          </Tab.Pane>\n        </Route>\n      ),\n    },\n    {\n      menuItem: {\n        as: NavLink,\n        content: \"Search\",\n        to: \"/\",\n        exact: true,\n        key: \"home\",\n      },\n      render: () => (\n        <Route path='/' exact>\n          <Tab.Pane>\n            <div>\n              {\" \"}\n              <Search />\n            </div>\n          </Tab.Pane>\n        </Route>\n      ),\n    },\n    {\n      menuItem: loggedin\n        ? {\n            as: NavLink,\n            content: \"My Searches\",\n            to: \"/my_searches\",\n            exact: true,\n            key: \"my_searches\",\n          }\n        : {},\n      render: () => (\n        <Route path='/my_searches' exact>\n          <Tab.Pane>\n            <div>\n              <MySearches />\n            </div>\n          </Tab.Pane>\n        </Route>\n      ),\n    },\n  ];\n\n  const defaultActiveIndex = panes.findIndex((pane) => {\n    return !!matchPath(window.location.pathname, {\n      path: pane.menuItem.to,\n      exact: true,\n    });\n  });\n\n  // React routing; render header and tabs (body)\n\n  return (\n    <BrowserRouter>\n      <div className='App'>\n        <br></br>\n        <HeaderComp handleLogout={handleLogout} handleUpdate={handleUpdate} findMe={findMe} />\n        <hr></hr>\n        <Tab panes={panes} defaultActiveIndex={defaultActiveIndex} />\n        <br></br>\n        <div></div>\n        <Switch>\n          <Route exact path='/login' component={Login} />\n          <Route exact path='/signup' component={Signup} />\n          <Route exact path='/results' component={ResultsContainer} />\n          <Route exact path='/success'>\n            <UpdateSuccessful findMe={findMe} />\n          </Route>\n          <Route exact path='/profile'>\n            <Profile handleLogout={handleLogout} />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ContextProvider from \"./context/Context\";\n\n// Enabled ContextProvider at highest level component\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ContextProvider>\n        <App />\n      </ContextProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}