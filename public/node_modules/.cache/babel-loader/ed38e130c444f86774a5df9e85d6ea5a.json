{"ast":null,"code":"import{Card}from\"semantic-ui-react\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ResultsCard=function ResultsCard(_ref){var result=_ref.result;var link=\"http://www.reddit.com\"+result.permalink;// Renders and links to Reddit comments found by pushshift api\nreturn/*#__PURE__*/_jsxs(Card.Group,{itemsPerRow:1,children:[/*#__PURE__*/_jsxs(Card,{centered:true,href:link,target:\"_blank\",children:[/*#__PURE__*/_jsx(Card.Content,{textAlign:\"left\",header:result.author+\" says...\"}),/*#__PURE__*/_jsx(Card.Content,{textAlign:\"left\",description:result.body}),/*#__PURE__*/_jsxs(Card.Content,{extra:true,children:[\"Subreddit: \",result.subreddit]})]}),/*#__PURE__*/_jsx(\"br\",{})]});};export default ResultsCard;","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/ResultsCard.js"],"names":["Card","React","ResultsCard","result","link","permalink","author","body","subreddit"],"mappings":"AAAA,OAASA,IAAT,KAAqB,mBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,CAClC,GAAMC,CAAAA,IAAI,CAAG,wBAA0BD,MAAM,CAACE,SAA9C,CAEA;AAEA,mBACE,MAAC,IAAD,CAAM,KAAN,EAAY,WAAW,CAAE,CAAzB,wBACE,MAAC,IAAD,EAAM,QAAQ,KAAd,CAAe,IAAI,CAAED,IAArB,CAA2B,MAAM,CAAC,QAAlC,wBACE,KAAC,IAAD,CAAM,OAAN,EAAc,SAAS,CAAC,MAAxB,CAA+B,MAAM,CAAED,MAAM,CAACG,MAAP,CAAgB,UAAvD,EADF,cAEE,KAAC,IAAD,CAAM,OAAN,EAAc,SAAS,CAAC,MAAxB,CAA+B,WAAW,CAAEH,MAAM,CAACI,IAAnD,EAFF,cAGE,MAAC,IAAD,CAAM,OAAN,EAAc,KAAK,KAAnB,yBAAgCJ,MAAM,CAACK,SAAvC,GAHF,GADF,cAME,aANF,GADF,CAUD,CAfD,CAiBA,cAAeN,CAAAA,WAAf","sourcesContent":["import { Card } from \"semantic-ui-react\";\nimport React from \"react\";\n\nconst ResultsCard = ({ result }) => {\n  const link = `http://www.reddit.com` + result.permalink;\n\n  // Renders and links to Reddit comments found by pushshift api\n\n  return (\n    <Card.Group itemsPerRow={1}>\n      <Card centered href={link} target='_blank'>\n        <Card.Content textAlign='left' header={result.author + \" says...\"} />\n        <Card.Content textAlign='left' description={result.body} />\n        <Card.Content extra>Subreddit: {result.subreddit}</Card.Content>\n      </Card>\n      <br></br>\n    </Card.Group>\n  );\n};\n\nexport default ResultsCard;\n"]},"metadata":{},"sourceType":"module"}