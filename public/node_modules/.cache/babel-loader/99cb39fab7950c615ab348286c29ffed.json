{"ast":null,"code":"import React from\"react\";import{Divider,Header,Icon,Table}from\"semantic-ui-react\";import EmoDocResults from\"./EmoDocResults\";import EmoTargResults from\"./EmoTargResults\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TopContentCard=function TopContentCard(_ref){var item=_ref.item;// Assigns variables to data object from backend\nvar emoDoc=item.search_results[0].emo_doc_json;var emoTarg=item.search_results[0].emo_search_json;var sentDoc=item.search_results[0].sent_doc_json;// Renders search results, toggles render of 'search term' results\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Divider,{horizontal:true,children:/*#__PURE__*/_jsxs(Header,{as:\"h3\",children:[/*#__PURE__*/_jsx(Icon,{name:\"search\"}),\"Search Info\"]})}),/*#__PURE__*/_jsx(Table,{unstackable:true,children:/*#__PURE__*/_jsxs(Table.Body,{children:[/*#__PURE__*/_jsxs(Table.Row,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Table.Cell,{children:\"Username:\"}),/*#__PURE__*/_jsx(Table.Cell,{children:/*#__PURE__*/_jsxs(\"strong\",{children:[item.user.username,\"s\"]})}),/*#__PURE__*/_jsx(Table.Cell,{children:\"Reddit User:\"}),/*#__PURE__*/_jsx(Table.Cell,{children:/*#__PURE__*/_jsx(\"strong\",{children:item.author.name})})]}),/*#__PURE__*/_jsxs(Table.Row,{textAlign:\"center\",children:[/*#__PURE__*/_jsx(Table.Cell,{children:\"Subreddit:\"}),/*#__PURE__*/_jsx(Table.Cell,{children:/*#__PURE__*/_jsx(\"strong\",{children:item.subreddit.name})}),/*#__PURE__*/_jsx(Table.Cell,{children:\"Topic:\"}),/*#__PURE__*/_jsx(Table.Cell,{children:/*#__PURE__*/_jsx(\"strong\",{children:item.search_term.search_term})})]})]})}),/*#__PURE__*/_jsx(Divider,{horizontal:true,children:/*#__PURE__*/_jsxs(Header,{as:\"h3\",children:[/*#__PURE__*/_jsx(Icon,{name:\"bar chart\"}),\"Results\"]})}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Overall Sentiment Score: \",sentDoc.score,\" (\",sentDoc.label,\")\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"emoDocResults\",children:[/*#__PURE__*/_jsx(EmoDocResults,{emoDoc:emoDoc}),emoTarg?emoTarg.map(function(targ,id){return/*#__PURE__*/_jsx(EmoTargResults,{targ:targ},id);}):null]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]});};export default TopContentCard;","map":{"version":3,"sources":["/home/brinton/Development/School/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/TopContentCard.js"],"names":["React","Divider","Header","Icon","Table","EmoDocResults","EmoTargResults","TopContentCard","item","emoDoc","search_results","emo_doc_json","emoTarg","emo_search_json","sentDoc","sent_doc_json","user","username","author","name","subreddit","search_term","score","label","map","targ","id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,CAAkBC,MAAlB,CAA0BC,IAA1B,CAAgCC,KAAhC,KAA6C,mBAA7C,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CACnC;AAEA,GAAMC,CAAAA,MAAM,CAAGD,IAAI,CAACE,cAAL,CAAoB,CAApB,EAAuBC,YAAtC,CACA,GAAMC,CAAAA,OAAO,CAAGJ,IAAI,CAACE,cAAL,CAAoB,CAApB,EAAuBG,eAAvC,CACA,GAAMC,CAAAA,OAAO,CAAGN,IAAI,CAACE,cAAL,CAAoB,CAApB,EAAuBK,aAAvC,CAEA;AAEA,mBACE,oCACE,KAAC,OAAD,EAAS,UAAU,KAAnB,uBACE,MAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,wBACE,KAAC,IAAD,EAAM,IAAI,CAAC,QAAX,EADF,iBADF,EADF,cAOE,KAAC,KAAD,EAAO,WAAW,CAAE,IAApB,uBACE,MAAC,KAAD,CAAO,IAAP,yBACE,MAAC,KAAD,CAAO,GAAP,EAAW,SAAS,CAAC,QAArB,wBACE,KAAC,KAAD,CAAO,IAAP,wBADF,cAEE,KAAC,KAAD,CAAO,IAAP,wBACE,0BAASP,IAAI,CAACQ,IAAL,CAAUC,QAAnB,OADF,EAFF,cAKE,KAAC,KAAD,CAAO,IAAP,2BALF,cAME,KAAC,KAAD,CAAO,IAAP,wBACE,wBAAST,IAAI,CAACU,MAAL,CAAYC,IAArB,EADF,EANF,GADF,cAWE,MAAC,KAAD,CAAO,GAAP,EAAW,SAAS,CAAC,QAArB,wBACE,KAAC,KAAD,CAAO,IAAP,yBADF,cAEE,KAAC,KAAD,CAAO,IAAP,wBACE,wBAASX,IAAI,CAACY,SAAL,CAAeD,IAAxB,EADF,EAFF,cAKE,KAAC,KAAD,CAAO,IAAP,qBALF,cAME,KAAC,KAAD,CAAO,IAAP,wBACE,wBAASX,IAAI,CAACa,WAAL,CAAiBA,WAA1B,EADF,EANF,GAXF,GADF,EAPF,cA+BE,KAAC,OAAD,EAAS,UAAU,KAAnB,uBACE,MAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,wBACE,KAAC,IAAD,EAAM,IAAI,CAAC,WAAX,EADF,aADF,EA/BF,cAqCE,kDAC4BP,OAAO,CAACQ,KADpC,MAC6CR,OAAO,CAACS,KADrD,OArCF,cAwCE,aAAK,SAAS,CAAC,eAAf,wBACE,KAAC,aAAD,EAAe,MAAM,CAAEd,MAAvB,EADF,CAEGG,OAAO,CACJA,OAAO,CAACY,GAAR,CAAY,SAACC,IAAD,CAAOC,EAAP,CAAc,CACxB,mBAAO,KAAC,cAAD,EAAyB,IAAI,CAAED,IAA/B,EAAqBC,EAArB,CAAP,CACD,CAFD,CADI,CAIJ,IANN,GAxCF,cAgDE,aAhDF,cAiDE,aAjDF,cAkDE,aAlDF,GADF,CAsDD,CA/DD,CAiEA,cAAenB,CAAAA,cAAf","sourcesContent":["import React from \"react\";\nimport { Divider, Header, Icon, Table } from \"semantic-ui-react\";\nimport EmoDocResults from \"./EmoDocResults\";\nimport EmoTargResults from \"./EmoTargResults\";\n\nconst TopContentCard = ({ item }) => {\n  // Assigns variables to data object from backend\n\n  const emoDoc = item.search_results[0].emo_doc_json;\n  const emoTarg = item.search_results[0].emo_search_json;\n  const sentDoc = item.search_results[0].sent_doc_json;\n\n  // Renders search results, toggles render of 'search term' results\n\n  return (\n    <div>\n      <Divider horizontal>\n        <Header as='h3'>\n          <Icon name='search' />\n          Search Info\n        </Header>\n      </Divider>\n      <Table unstackable={true}>\n        <Table.Body>\n          <Table.Row textAlign='center'>\n            <Table.Cell>Username:</Table.Cell>\n            <Table.Cell>\n              <strong>{item.user.username}s</strong>\n            </Table.Cell>\n            <Table.Cell>Reddit User:</Table.Cell>\n            <Table.Cell>\n              <strong>{item.author.name}</strong>\n            </Table.Cell>\n          </Table.Row>\n          <Table.Row textAlign='center'>\n            <Table.Cell>Subreddit:</Table.Cell>\n            <Table.Cell>\n              <strong>{item.subreddit.name}</strong>\n            </Table.Cell>\n            <Table.Cell>Topic:</Table.Cell>\n            <Table.Cell>\n              <strong>{item.search_term.search_term}</strong>\n            </Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n      <Divider horizontal>\n        <Header as='h3'>\n          <Icon name='bar chart' />\n          Results\n        </Header>\n      </Divider>\n      <h3>\n        Overall Sentiment Score: {sentDoc.score} ({sentDoc.label})\n      </h3>\n      <div className='emoDocResults'>\n        <EmoDocResults emoDoc={emoDoc}></EmoDocResults>\n        {emoTarg\n          ? emoTarg.map((targ, id) => {\n              return <EmoTargResults key={id} targ={targ} />;\n            })\n          : null}\n      </div>\n      <br></br>\n      <br></br>\n      <br></br>\n    </div>\n  );\n};\n\nexport default TopContentCard;\n"]},"metadata":{},"sourceType":"module"}