{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/School/Phase5/Reddit-Sentiment-Analyzer/client/src/context/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Context = /*#__PURE__*/createContext();\n\nconst ContextProvider = props => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [loggedin, setLoggedin] = useState(false);\n  const [results, setResults] = useState();\n  const [sUsername, setSUsername] = useState(\"\");\n  const [subreddit, setSubreddit] = useState(\"\");\n  const [searchTerms, setSearchTerms] = useState(\"\");\n  const [searchTarget, setSearchTarget] = useState(\"comment\");\n  const [isUpdating, setIsUpdating] = useState(false); // Context 'store'\n\n  const store = {\n    user,\n    setUser,\n    loggedin,\n    setLoggedin,\n    results,\n    setResults,\n    sUsername,\n    setSUsername,\n    subreddit,\n    setSubreddit,\n    searchTerms,\n    setSearchTerms,\n    searchTarget,\n    setSearchTarget,\n    isUpdating,\n    setIsUpdating\n  }; // Wrapped contenxt provider component at Index.js\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: store,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ContextProvider, \"zj7Hwf0UKbyBNKRsW2XwIX/eX3Q=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/home/brinton/Development/School/Phase5/Reddit-Sentiment-Analyzer/client/src/context/Context.js"],"names":["React","createContext","useState","Context","ContextProvider","props","user","setUser","loggedin","setLoggedin","results","setResults","sUsername","setSUsername","subreddit","setSubreddit","searchTerms","setSearchTerms","searchTarget","setSearchTarget","isUpdating","setIsUpdating","store","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,OAAO,gBAAGF,aAAa,EAA7B;;AACP,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,SAAD,CAAhD;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C,CARiC,CAUjC;;AAEA,QAAMoB,KAAK,GAAG;AACZhB,IAAAA,IADY;AAEZC,IAAAA,OAFY;AAGZC,IAAAA,QAHY;AAIZC,IAAAA,WAJY;AAKZC,IAAAA,OALY;AAMZC,IAAAA,UANY;AAOZC,IAAAA,SAPY;AAQZC,IAAAA,YARY;AASZC,IAAAA,SATY;AAUZC,IAAAA,YAVY;AAWZC,IAAAA,WAXY;AAYZC,IAAAA,cAZY;AAaZC,IAAAA,YAbY;AAcZC,IAAAA,eAdY;AAeZC,IAAAA,UAfY;AAgBZC,IAAAA;AAhBY,GAAd,CAZiC,CA+BjC;;AACA,sBAAO,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC,KAAzB;AAAA,cAAiCjB,KAAK,CAACkB;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjCD;;GAAMnB,e;;KAAAA,e;AAmCN,eAAeA,eAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const Context = createContext();\nconst ContextProvider = (props) => {\n  const [user, setUser] = useState({});\n  const [loggedin, setLoggedin] = useState(false);\n  const [results, setResults] = useState();\n  const [sUsername, setSUsername] = useState(\"\");\n  const [subreddit, setSubreddit] = useState(\"\");\n  const [searchTerms, setSearchTerms] = useState(\"\");\n  const [searchTarget, setSearchTarget] = useState(\"comment\");\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  // Context 'store'\n\n  const store = {\n    user,\n    setUser,\n    loggedin,\n    setLoggedin,\n    results,\n    setResults,\n    sUsername,\n    setSUsername,\n    subreddit,\n    setSubreddit,\n    searchTerms,\n    setSearchTerms,\n    searchTarget,\n    setSearchTarget,\n    isUpdating,\n    setIsUpdating\n  };\n\n  // Wrapped contenxt provider component at Index.js\n  return <Context.Provider value={store}>{props.children}</Context.Provider>;\n};\n\nexport default ContextProvider;\n"]},"metadata":{},"sourceType":"module"}