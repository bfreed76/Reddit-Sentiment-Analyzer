{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoDocResults.js\";\nimport React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmoDocResults = ({\n  emoDoc\n}) => {\n  const {\n    sadness,\n    joy,\n    fear,\n    disgust,\n    anger\n  } = emoDoc.emotion;\n  const data = [{\n    name: \"Sadness\",\n    uv: sadness\n  }, {\n    name: \"Joy\",\n    uv: joy\n  }, {\n    name: \"Fear\",\n    uv: fear\n  }, {\n    name: \"Disgust\",\n    uv: disgust\n  }, {\n    name: \"Anger\",\n    uv: anger\n  }];\n\n  const renderBarChart = /*#__PURE__*/_jsxDEV(BarChart, {\n    width: 350,\n    height: 250,\n    data: data,\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      type: \"number\",\n      domain: [0, 100]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: \"uv\",\n      fill: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Emotional score overall \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), renderBarChart]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EmoDocResults;\nexport default EmoDocResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmoDocResults\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoDocResults.js"],"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","EmoDocResults","emoDoc","sadness","joy","fear","disgust","anger","emotion","data","name","uv","renderBarChart"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,aAAtC,EAAqDC,OAArD,QAAoE,UAApE;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,MAAyCL,MAAM,CAACM,OAAtD;AAEA,QAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,EAAE,EAAER;AAAvB,GADW,EAEX;AAAEO,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,EAAE,EAAEP;AAAnB,GAFW,EAGX;AAAEM,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,EAAE,EAAEN;AAApB,GAHW,EAIX;AAAEK,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,EAAE,EAAEL;AAAvB,GAJW,EAKX;AAAEI,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,EAAE,EAAEJ;AAArB,GALW,CAAb;;AAQA,QAAMK,cAAc,gBAClB,QAAC,QAAD;AACA,IAAA,KAAK,EAAE,GADP;AACY,IAAA,MAAM,EAAE,GADpB;AAEA,IAAA,IAAI,EAAEH,IAFN;AAAA,4BAGE,QAAC,aAAD;AAAe,MAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,GAAJ;AAA7B;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,IAAb;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAYA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGG,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA7BD;;KAAMX,a;AA+BN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\n\nconst EmoDocResults = ({ emoDoc }) => {\n  const { sadness, joy, fear, disgust, anger } = emoDoc.emotion;\n\n  const data = [\n    { name: \"Sadness\", uv: sadness },\n    { name: \"Joy\", uv: joy },\n    { name: \"Fear\", uv: fear },\n    { name: \"Disgust\", uv: disgust },\n    { name: \"Anger\", uv: anger },\n  ];\n\n  const renderBarChart = (\n    <BarChart \n    width={350} height={250} \n    data={data}>\n      <CartesianGrid strokeDasharray='3 3' />\n      <XAxis dataKey='name' />\n      <YAxis type=\"number\" domain={[0, 100]}/>\n      <Tooltip />\n      <Bar dataKey='uv' fill='#8884d8' />\n    </BarChart>\n  );\n\n  return (\n    <div>\n      <p>Emotional score overall </p>\n      {renderBarChart}\n    </div>\n  );\n};\n\nexport default EmoDocResults;"]},"metadata":{},"sourceType":"module"}