{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoDocResults.js\";\nimport React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmoDocResults = ({\n  emoDoc\n}) => {\n  const {\n    sadness,\n    joy,\n    fear,\n    disgust,\n    anger\n  } = emoDoc.emotion; // Assigns \n\n  const data = [{\n    name: \"Sadness\",\n    Score: sadness\n  }, {\n    name: \"Joy\",\n    Score: joy\n  }, {\n    name: \"Fear\",\n    Score: fear\n  }, {\n    name: \"Disgust\",\n    Score: disgust\n  }, {\n    name: \"Anger\",\n    Score: anger\n  }];\n\n  const renderBarChart = /*#__PURE__*/_jsxDEV(BarChart, {\n    width: 325,\n    height: 250,\n    data: data,\n    margin: {\n      top: 5,\n      right: 5,\n      left: 0,\n      bottom: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      type: \"number\",\n      domain: [0, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: \"Score\",\n      fill: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Emotional score overall \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), renderBarChart]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EmoDocResults;\nexport default EmoDocResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmoDocResults\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoDocResults.js"],"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","EmoDocResults","emoDoc","sadness","joy","fear","disgust","anger","emotion","data","name","Score","renderBarChart","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,aAAtC,EAAqDC,OAArD,QAAoE,UAApE;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,MAAyCL,MAAM,CAACM,OAAtD,CADoC,CAGpC;;AAEA,QAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,KAAK,EAAER;AAA1B,GADW,EAEX;AAAEO,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAEP;AAAtB,GAFW,EAGX;AAAEM,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAEN;AAAvB,GAHW,EAIX;AAAEK,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,KAAK,EAAEL;AAA1B,GAJW,EAKX;AAAEI,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAEJ;AAAxB,GALW,CAAb;;AAQA,QAAMK,cAAc,gBAClB,QAAC,QAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAEH,IAHR;AAIE,IAAA,MAAM,EAAE;AACNI,MAAAA,GAAG,EAAE,CADC;AAENC,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,MAAM,EAAE;AAJF,KAJV;AAAA,4BAUE,QAAC,aAAD;AAAe,MAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AAA7B;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAmBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtCD;;KAAMX,a;AAwCN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\n\nconst EmoDocResults = ({ emoDoc }) => {\n  const { sadness, joy, fear, disgust, anger } = emoDoc.emotion;\n\n  // Assigns \n\n  const data = [\n    { name: \"Sadness\", Score: sadness },\n    { name: \"Joy\", Score: joy },\n    { name: \"Fear\", Score: fear },\n    { name: \"Disgust\", Score: disgust },\n    { name: \"Anger\", Score: anger },\n  ];\n\n  const renderBarChart = (\n    <BarChart\n      width={325}\n      height={250}\n      data={data}\n      margin={{\n        top: 5,\n        right: 5,\n        left: 0,\n        bottom: 5,\n      }}>\n      <CartesianGrid strokeDasharray='3 3' />\n      <XAxis dataKey='name' />\n      <YAxis type='number' domain={[0, 1]} />\n      <Tooltip />\n      <Bar dataKey='Score' fill='#8884d8' />\n    </BarChart>\n  );\n\n  return (\n    <div>\n      <p>Emotional score overall </p>\n      {renderBarChart}\n    </div>\n  );\n};\n\nexport default EmoDocResults;\n"]},"metadata":{},"sourceType":"module"}