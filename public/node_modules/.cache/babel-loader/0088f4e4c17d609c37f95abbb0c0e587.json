{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoTargResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\nimport { LineChart, BarChart, Bar, Cell, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmoTargResults = ({\n  targ\n}) => {\n  _s();\n\n  const {\n    user,\n    results\n  } = useContext(Context); // const { sadness, joy, fear, disgust, anger } = targ.emotion;\n  // const data = [\n  //   { name: \"S\", uv: sadness },\n  //   { name: \"J\", uv: joy },\n  //   { name: \"F\", uv: fear },\n  //   { name: \"D\", uv: disgust },\n  //   { name: \"A\", uv: anger },\n  // ];\n  // const renderBarChart = (\n  //   <BarChart\n  //     width={250}\n  //     height={100}\n  //     data={data}\n  //     margin={{\n  //       top: 5,\n  //       right: 5,\n  //       left: 15,\n  //       bottom: 5,\n  //     }}>\n  //     <CartesianGrid strokeDasharray='1 3' />\n  //     <XAxis dataKey='name' fontSize='15' />\n  //     <YAxis />\n  //     <Tooltip />\n  //     <Bar dataKey='uv' fill='#3884d8' />\n  //   </BarChart>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"EMO TARG RESULTS COMPONENT!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\\"Emotional scores for\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmoTargResults, \"xbRnQvo8vFws0558jDo9enGAvjw=\");\n\n_c = EmoTargResults;\nexport default EmoTargResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmoTargResults\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoTargResults.js"],"names":["React","useContext","useEffect","Container","Context","LineChart","BarChart","Bar","Cell","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","EmoTargResults","targ","user","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,KAPF,EAQEC,aARF,EASEC,OATF,EAUEC,MAVF,EAWEC,mBAXF,QAYO,UAZP;;;AAcA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACnC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBlB,UAAU,CAACG,OAAD,CAApC,CADmC,CAGnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzCD;;GAAMY,c;;KAAAA,c;AA2CN,eAAeA,cAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\nimport {\n  LineChart,\n  BarChart,\n  Bar,\n  Cell,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst EmoTargResults = ({ targ }) => {\n  const { user, results } = useContext(Context);\n\n  // const { sadness, joy, fear, disgust, anger } = targ.emotion;\n  \n  // const data = [\n  //   { name: \"S\", uv: sadness },\n  //   { name: \"J\", uv: joy },\n  //   { name: \"F\", uv: fear },\n  //   { name: \"D\", uv: disgust },\n  //   { name: \"A\", uv: anger },\n  // ];\n\n  // const renderBarChart = (\n  //   <BarChart\n  //     width={250}\n  //     height={100}\n  //     data={data}\n  //     margin={{\n  //       top: 5,\n  //       right: 5,\n  //       left: 15,\n  //       bottom: 5,\n  //     }}>\n  //     <CartesianGrid strokeDasharray='1 3' />\n  //     <XAxis dataKey='name' fontSize='15' />\n  //     <YAxis />\n  //     <Tooltip />\n  //     <Bar dataKey='uv' fill='#3884d8' />\n  //   </BarChart>\n  // );\n\n  return (\n    <div>\n      <h1>EMO TARG RESULTS COMPONENT!</h1>\n      <p>\"Emotional scores for \n        {/* \"{targ.text}\"  */}\n        </p>\n      {/* {renderBarChart} */}\n    </div>\n  );\n};\n\nexport default EmoTargResults;\n"]},"metadata":{},"sourceType":"module"}