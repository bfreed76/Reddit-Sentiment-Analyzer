{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Button, Form, Input } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const history = useHistory();\n  const [error, setError] = useState(false);\n  const {\n    user,\n    setResults,\n    sUsername,\n    setSUsername,\n    subreddit,\n    setSubreddit,\n    searchTerms,\n    setSearchTerms,\n    searchTarget,\n    setSearchTarget\n  } = useContext(Context);\n  let pushShiftURL = \"https://api.pushshift.io/reddit/search/\" + searchTarget + \"/?q=\" + searchTerms + \"&subreddit=\" + subreddit + \"&author=\" + sUsername + \"&fields=author,created_utc,body,score,subreddit,url,title,selftext,permalink\" + \"&size=\" + \"3\";\n\n  const handleSearch = e => {\n    e.preventDefault();\n    const postObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: user,\n        url: pushShiftURL,\n        sUsername,\n        subreddit,\n        searchTerms\n      })\n    };\n    fetch(\"/reddit\", postObj).then(res => {\n      if (res.ok) {\n        res.json().then(res => {\n          console.log(pushShiftURL);\n          console.log(\"BACK FROM SERVER!\", res);\n          setResults(res);\n          setError(false);\n          history.push(\"/results\");\n        });\n      } else {\n        res.json().then(errorData => {\n          console.log(\"SERVER ERR: \", errorData.errors);\n          setError(true);\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSearch,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Discover emotional content on Reddit.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        icon: \"search\",\n        iconPosition: \"left\",\n        placeholder: \"u/ username\",\n        onChange: e => setSUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        icon: \"search\",\n        iconPosition: \"left\",\n        placeholder: \"r/ subreddit\",\n        onChange: e => setSubreddit(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        icon: \"search\",\n        iconPosition: \"left\",\n        placeholder: \"search terms\",\n        onChange: e => setSearchTerms(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"No Results Found. Please Search Again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 18\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"N487oIXpFz+8nr5loaRZPvaGDE0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/Search.js"],"names":["React","useState","useContext","Button","Form","Input","useHistory","Context","Search","history","error","setError","user","setResults","sUsername","setSUsername","subreddit","setSubreddit","searchTerms","setSearchTerms","searchTarget","setSearchTarget","pushShiftURL","handleSearch","e","preventDefault","postObj","method","headers","body","JSON","stringify","url","fetch","then","res","ok","json","console","log","push","errorData","errors","target","value","color"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Button, Form, Input } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../context/Context\";\n\nconst Search = () => {\n  const history = useHistory();\n  const [error, setError] = useState(false);\n  const {\n    user,\n    setResults,\n    sUsername,\n    setSUsername,\n    subreddit,\n    setSubreddit,\n    searchTerms,\n    setSearchTerms,\n    searchTarget,\n    setSearchTarget,\n  } = useContext(Context);\n\n  let pushShiftURL =\n    \"https://api.pushshift.io/reddit/search/\" +\n    searchTarget +\n    \"/?q=\" +\n    searchTerms +\n    \"&subreddit=\" +\n    subreddit +\n    \"&author=\" +\n    sUsername +\n    \"&fields=author,created_utc,body,score,subreddit,url,title,selftext,permalink\" +\n    \"&size=\" +\n    \"3\";\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    const postObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: user,\n        url: pushShiftURL,\n        sUsername,\n        subreddit,\n        searchTerms,\n      }),\n    };\n    fetch(\"/reddit\", postObj).then((res) => {\n      if (res.ok) {\n        res.json().then((res) => {\n          console.log(pushShiftURL);\n          console.log(\"BACK FROM SERVER!\", res);\n          setResults(res);\n          setError(false);\n          history.push(\"/results\");\n        });\n      } else {\n        res.json().then((errorData) => {\n          console.log(\"SERVER ERR: \", errorData.errors);\n          setError(true);\n        });\n      }\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSearch}>\n      <h2>Discover emotional content on Reddit.</h2>\n      <Form.Field>\n        <Input\n          icon='search'\n          iconPosition='left'\n          placeholder='u/ username'\n          onChange={(e) => setSUsername(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Input\n          icon='search'\n          iconPosition='left'\n          placeholder='r/ subreddit'\n          onChange={(e) => setSubreddit(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Input\n          icon='search'\n          iconPosition='left'\n          placeholder='search terms'\n          onChange={(e) => setSearchTerms(e.target.value)}\n        />\n        {error ? <h4 style={{ color: \"red\" }}>No Results Found. Please Search Again.</h4> : null}\n      </Form.Field>\n      <br></br>\n      <Button primary type='submit'>\n        Search\n      </Button>\n    </Form>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}