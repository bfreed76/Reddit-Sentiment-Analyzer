{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoDocResults.js\";\nimport React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { LineChart, BarChart, Bar, Cell, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\"; // sadness: 0.522918,\n//       joy: 0.208687,\n//       fear: 0.007476,\n//       disgust: 0.099433,\n//       anger: 0.318133,\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: \"sadness\",\n  uv: 0.522918\n}, {\n  name: \"joy\",\n  uv: 0.208687\n}, {\n  name: \"fear\",\n  f: 0.007476\n}, {\n  name: \"disgust\",\n  d: 0.099433\n}, {\n  name: \"anger\",\n  a: 0.318133\n}];\n\nconst renderCustomBarLabel = ({\n  payload,\n  x,\n  y,\n  width,\n  height,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x + width / 4,\n    y: y,\n    fill: \"#666\",\n    textAnchor: \"middle\",\n    dy: -6,\n    children: `${value}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\nconst renderBarChart =\n/*#__PURE__*/\n//   <BarChart width={600} height={300} data={data}>\n//     <XAxis dataKey='name' />\n//     <YAxis />\n//     <Bar dataKey='s' barSize={50} fill='#8884d8' label={renderCustomBarLabel} />\n//     <Bar dataKey='j' barSize={50} fill='#8884d8' label={renderCustomBarLabel} />\n//     <Bar dataKey='f' barSize={50} fill='#8884d8' label={renderCustomBarLabel} />\n//     <Bar dataKey='d' barSize={50} fill='#8884d8' label={renderCustomBarLabel} />\n//     <Bar dataKey='a' barSize={50} fill='#8884d8' label={renderCustomBarLabel} />\n//   </BarChart>\n_jsxDEV(BarChart, {\n  width: 150,\n  height: 40,\n  data: data,\n  children: /*#__PURE__*/_jsxDEV(Bar, {\n    dataKey: \"uv\",\n    fill: \"#8884d8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 1\n}, this);\n\nconst EmoDocResults = ({\n  emoDoc\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: renderBarChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EmoDocResults;\nexport default EmoDocResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmoDocResults\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoDocResults.js"],"names":["React","Container","LineChart","BarChart","Bar","Cell","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","data","name","uv","f","d","a","renderCustomBarLabel","payload","x","y","width","height","value","renderBarChart","EmoDocResults","emoDoc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,KAPF,EAQEC,aARF,EASEC,OATF,EAUEC,MAVF,EAWEC,mBAXF,QAYO,UAZP,C,CAcA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,IAAI,GAAG,CACX;AAAEC,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,EAAE,EAAE;AAAvB,CADW,EAEX;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,EAAE,EAAE;AAAnB,CAFW,EAGX;AAAED,EAAAA,IAAI,EAAE,MAAR;AAAgBE,EAAAA,CAAC,EAAE;AAAnB,CAHW,EAIX;AAAEF,EAAAA,IAAI,EAAE,SAAR;AAAmBG,EAAAA,CAAC,EAAE;AAAtB,CAJW,EAKX;AAAEH,EAAAA,IAAI,EAAE,OAAR;AAAiBI,EAAAA,CAAC,EAAE;AAApB,CALW,CAAb;;AAQA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,CAAX;AAAcC,EAAAA,CAAd;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA,MAAxB;AAAgCC,EAAAA;AAAhC,CAAD,KAA6C;AACxE,sBAAO;AAAM,IAAA,CAAC,EAAEJ,CAAC,GAAGE,KAAK,GAAG,CAArB;AAAwB,IAAA,CAAC,EAAED,CAA3B;AAA8B,IAAA,IAAI,EAAC,MAAnC;AAA0C,IAAA,UAAU,EAAC,QAArD;AAA8D,IAAA,EAAE,EAAE,CAAC,CAAnE;AAAA,cAAwE,GAAEG,KAAM;AAAhF;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,MAAMC,cAAc;AAAA;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,QAAC,QAAD;AAAU,EAAA,KAAK,EAAE,GAAjB;AAAsB,EAAA,MAAM,EAAE,EAA9B;AAAkC,EAAA,IAAI,EAAEb,IAAxC;AAAA,yBACE,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,IAAb;AAAkB,IAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QAZA;;AAkBA,MAAMc,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACpC,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,gBAAYF;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMC,a;AAQN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport {\n  LineChart,\n  BarChart,\n  Bar,\n  Cell,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\n// sadness: 0.522918,\n//       joy: 0.208687,\n//       fear: 0.007476,\n//       disgust: 0.099433,\n//       anger: 0.318133,\n\nconst data = [\n  { name: \"sadness\", uv: 0.522918 },\n  { name: \"joy\", uv: 0.208687 },\n  { name: \"fear\", f: 0.007476 },\n  { name: \"disgust\", d: 0.099433 },\n  { name: \"anger\", a: 0.318133 },\n];\n\nconst renderCustomBarLabel = ({ payload, x, y, width, height, value }) => {\n  return <text x={x + width / 4} y={y} fill='#666' textAnchor='middle' dy={-6}>{`${value}`}</text>;\n};\n\nconst renderBarChart = (\n//   <BarChart width={600} height={300} data={data}>\n//     <XAxis dataKey='name' />\n//     <YAxis />\n//     <Bar dataKey='s' barSize={50} fill='#8884d8' label={renderCustomBarLabel} />\n//     <Bar dataKey='j' barSize={50} fill='#8884d8' label={renderCustomBarLabel} />\n//     <Bar dataKey='f' barSize={50} fill='#8884d8' label={renderCustomBarLabel} />\n//     <Bar dataKey='d' barSize={50} fill='#8884d8' label={renderCustomBarLabel} />\n//     <Bar dataKey='a' barSize={50} fill='#8884d8' label={renderCustomBarLabel} />\n//   </BarChart>\n\n\n<BarChart width={150} height={40} data={data}>\n  <Bar dataKey=\"uv\" fill=\"#8884d8\" />\n</BarChart>\n\n);\n\nconst EmoDocResults = ({ emoDoc }) => {\n  return (\n    <div>\n      <Container>{renderBarChart}</Container>\n    </div>\n  );\n};\n\nexport default EmoDocResults;\n"]},"metadata":{},"sourceType":"module"}