{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoDocResults.js\";\nimport React, { useContext } from \"react\";\nimport { Context } from \"../context/Context\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmoDocResults = ({\n  emoDoc\n}) => {\n  const {\n    sadness,\n    joy,\n    fear,\n    disgust,\n    anger\n  } = emoDoc.emotion;\n  const data = [{\n    name: \"Sadness\",\n    uv: sadness\n  }, {\n    name: \"Joy\",\n    uv: joy\n  }, {\n    name: \"Fear\",\n    uv: fear\n  }, {\n    name: \"Disgust\",\n    uv: disgust\n  }, {\n    name: \"Anger\",\n    uv: anger\n  }];\n\n  const renderBarChart = /*#__PURE__*/_jsxDEV(BarChart, {\n    width: 340,\n    height: 250,\n    data: data,\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: \"uv\",\n      fill: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Overall Emotional Score \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), renderBarChart]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n\n_c = EmoDocResults;\nexport default EmoDocResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmoDocResults\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoDocResults.js"],"names":["React","useContext","Context","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","EmoDocResults","emoDoc","sadness","joy","fear","disgust","anger","emotion","data","name","uv","renderBarChart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAEEC,QAFF,EAGEC,GAHF,EAKEC,KALF,EAMEC,KANF,EAOEC,aAPF,EAQEC,OARF,QAUO,UAVP;;;AAYA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAGpC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,GAAV;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA,OAArB;AAA8BC,IAAAA;AAA9B,MAAuCL,MAAM,CAACM,OAApD;AAGF,QAAMC,IAAI,GAAG,CACT;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,EAAE,EAAER;AAAvB,GADS,EAET;AAAEO,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,EAAE,EAAEP;AAAnB,GAFS,EAGT;AAAEM,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,EAAE,EAAEN;AAApB,GAHS,EAIT;AAAEK,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,EAAE,EAAEL;AAAvB,GAJS,EAKT;AAAEI,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,EAAE,EAAEJ;AAArB,GALS,CAAb;;AAQE,QAAMK,cAAc,gBAClB,QAAC,QAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAEH,IAHR;AAAA,4BAKE,QAAC,aAAD;AAAe,MAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,IAAb;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAcA,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAEFG,cAFE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAID,CAhCD;;KAAMX,a;AAkCN,eAAeA,aAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Context } from \"../context/Context\";\nimport {\n\n  BarChart,\n  Bar,\n\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n\n} from \"recharts\";\n\nconst EmoDocResults = ({ emoDoc }) => {\n\n\n  const {sadness, joy, fear, disgust, anger} = emoDoc.emotion\n  \n\nconst data = [\n    { name: \"Sadness\", uv: sadness},\n    { name: \"Joy\", uv: joy },\n    { name: \"Fear\", uv: fear },\n    { name: \"Disgust\", uv: disgust },\n    { name: \"Anger\", uv: anger },\n  ];\n\n  const renderBarChart = (\n    <BarChart \n      width={340}\n      height={250}\n      data={data}\n      >\n      <CartesianGrid strokeDasharray='3 3' />\n      <XAxis dataKey='name' />\n      <YAxis />\n      <Tooltip />\n      <Bar dataKey='uv' fill='#8884d8' />\n    </BarChart>\n  );\n\n  return <div>\n      <p>Overall Emotional Score </p>\n      {renderBarChart}\n      </div>;\n};\n\nexport default EmoDocResults;\n"]},"metadata":{},"sourceType":"module"}