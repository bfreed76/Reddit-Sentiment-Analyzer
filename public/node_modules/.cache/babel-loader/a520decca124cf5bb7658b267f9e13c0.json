{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [success, setSuccess] = useState(true);\n  const {\n    setUser,\n    setLoggedin,\n    isUpdating,\n    setIsUpdating,\n    CSRFToken\n  } = useContext(Context);\n  let history = useHistory();\n\n  const handleLogin = e => {\n    e.preventDefault();\n    const postObj = {\n      method: \"POST\",\n      // headers: {\n      //   \"Content-Type\": \"application/json\",\n      //   \"X-CSRF-Token\": CSRFToken(document.cookie)\n      // },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    };\n    fetch(\"/login\", postObj).then(r => r.json()).then(user => {\n      if (!!user.id) {\n        console.log(\"Log in: \", user);\n        setUser(user);\n        setLoggedin(true);\n        setSuccess(true);\n        history.push(\"success\");\n      } else {\n        setSuccess(false);\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [setIsUpdating(false), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), success ? null : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Alert\",\n        children: \"Wrong email or password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"QFU2XG+WdZMhMfoRBRlTCtyyp1E=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/Login.js"],"names":["React","useState","useContext","useHistory","Form","Button","Context","Login","email","setEmail","password","setPassword","success","setSuccess","setUser","setLoggedin","isUpdating","setIsUpdating","CSRFToken","history","handleLogin","e","preventDefault","postObj","method","body","JSON","stringify","fetch","then","r","json","user","id","console","log","push","catch","err","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [success, setSuccess] = useState(true);\n  const { setUser, setLoggedin, isUpdating, setIsUpdating, CSRFToken } = useContext(Context);\n  let history = useHistory();\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    const postObj = {\n      method: \"POST\",\n      // headers: {\n      //   \"Content-Type\": \"application/json\",\n      //   \"X-CSRF-Token\": CSRFToken(document.cookie)\n      // },\n      body: JSON.stringify({ email, password }),\n    }\n\n    \n\n    fetch(\"/login\", postObj)\n      .then((r) => r.json())\n      .then((user) => {\n        if (!!user.id) {\n          console.log(\"Log in: \", user);\n          setUser(user);\n          setLoggedin(true);\n          setSuccess(true);\n          history.push(\"success\");\n        } else {\n          setSuccess(false);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div>\n      {setIsUpdating(false)}\n      <Form onSubmit={handleLogin}>\n        <Form.Field>\n          <label>Email</label>\n          <input placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\n        </Form.Field>\n        <Form.Field>\n          <label>Password</label>\n          <input\n            placeholder='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Field>\n        {success ? null : <h3 className='Alert'>Wrong email or password.</h3>}\n        <Button primary type='submit'>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}