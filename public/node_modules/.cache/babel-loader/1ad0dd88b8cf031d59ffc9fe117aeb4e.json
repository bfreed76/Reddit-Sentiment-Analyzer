{"ast":null,"code":"import _slicedToArray from\"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import MySearchCards from\"./MySearchCards\";import{jsx as _jsx}from\"react/jsx-runtime\";var MySearches=function MySearches(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),mySearches=_useState2[0],setMySearches=_useState2[1];// Populates tab with most recent searches from all users\nuseEffect(function(){getMySearches();},[]);var getMySearches=function getMySearches(){fetch(\"/my_searches\").then(function(res){return res.json();}).then(function(data){setMySearches(data);}).catch(function(err){return console.log(\"error =\",err);});};// Renders result cards\nreturn/*#__PURE__*/_jsx(\"div\",{children:mySearches.length>1?mySearches.map(function(item,id){return/*#__PURE__*/_jsx(MySearchCards,{item:item},id);}):/*#__PURE__*/_jsx(\"h3\",{children:\"No search results available\"})});};export default MySearches;","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/MySearches.js"],"names":["React","useState","useEffect","MySearchCards","MySearches","mySearches","setMySearches","getMySearches","fetch","then","res","json","data","catch","err","console","log","length","map","item","id"],"mappings":"oJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,C,2CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,cAAoCH,QAAQ,CAAC,EAAD,CAA5C,wCAAOI,UAAP,eAAmBC,aAAnB,eAEA;AAEAJ,SAAS,CAAC,UAAM,CACdK,aAAa,GACd,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BC,KAAK,CAAC,cAAD,CAAL,CACGC,IADH,CACQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,CAAU,CACdN,aAAa,CAACM,IAAD,CAAb,CACD,CAJH,EAKGC,KALH,CAKS,SAACC,GAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBF,GAAvB,CAAT,EALT,EAMD,CAPD,CASA;AAEA,mBACE,qBACGT,UAAU,CAACY,MAAX,CAAoB,CAApB,CACCZ,UAAU,CAACa,GAAX,CAAe,SAACC,IAAD,CAAOC,EAAP,CAAc,CAC3B,mBAAO,KAAC,aAAD,EAAwB,IAAI,CAAED,IAA9B,EAAoBC,EAApB,CAAP,CACD,CAFD,CADD,cAKC,mDANJ,EADF,CAWD,CA/BD,CAiCA,cAAehB,CAAAA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MySearchCards from \"./MySearchCards\";\n\nconst MySearches = () => {\n  const [mySearches, setMySearches] = useState([]);\n\n  // Populates tab with most recent searches from all users\n\n  useEffect(() => {\n    getMySearches();\n  }, []);\n\n  const getMySearches = () => {\n    fetch(\"/my_searches\")\n      .then((res) => res.json())\n      .then((data) => {\n        setMySearches(data);\n      })\n      .catch((err) => console.log(\"error =\", err));\n  };\n\n  // Renders result cards\n\n  return (\n    <div>\n      {mySearches.length > 1 ? (\n        mySearches.map((item, id) => {\n          return <MySearchCards key={id} item={item} />;\n        })\n      ) : (\n        <h3>No search results available</h3>\n      )}\n    </div>\n  );\n};\n\nexport default MySearches;\n"]},"metadata":{},"sourceType":"module"}