{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Modal, Form, Header, Button } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\nimport SampleContent from \"./SampleContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    user,\n    setUser,\n    loggedin,\n    setLoggedin\n  } = useContext(Context);\n  let history = useHistory();\n\n  const handleLogin = e => {\n    e.preventDefault();\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(r => r.json()).then(user => {\n      if (!!user.id) {\n        console.log(\"Log in: \", user);\n        setUser(user);\n        setLoggedin(true);\n        history.push(\"/profile\");\n      }\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      as: Form,\n      onSubmit: e => handleLogin(e),\n      open: true,\n      size: \"tiny\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        icon: \"pencil\",\n        content: \"This is my header\",\n        as: \"h2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Name\",\n          required: true,\n          type: \"text\",\n          placeholder: \"Your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"red\",\n          icon: \"times\",\n          content: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"green\",\n          icon: \"save\",\n          content: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \");\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"nu3RD+h0oWBx6/tl0GrZOp/nWrI=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/Login.js"],"names":["React","useState","useContext","useHistory","Modal","Form","Header","Button","Context","SampleContent","Login","email","setEmail","password","setPassword","user","setUser","loggedin","setLoggedin","history","handleLogin","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","id","console","log","push","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Modal, Form, Header, Button } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\nimport SampleContent from \"./SampleContent\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { user, setUser, loggedin, setLoggedin } = useContext(Context);\n  let history = useHistory();\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    fetch(\"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    })\n      .then((r) => r.json())\n      .then((user) => {\n        if (!!user.id) {\n          console.log(\"Log in: \", user);\n          setUser(user);\n          setLoggedin(true);\n          history.push(\"/profile\");\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div>\n      <Modal\n        as={Form}\n        onSubmit={(e) => handleLogin(e)}\n        open={true}\n        size=\"tiny\"\n      >\n        <Header icon=\"pencil\" content=\"This is my header\" as=\"h2\" />\n        <Modal.Content>\n          <Form.Input\n            label=\"Name\"\n            required\n            type=\"text\"\n            placeholder=\"Your name\"\n          />\n          {/* {saved ? <div>Saved!</div> : null} {Gives response!} */}\n        </Modal.Content>\n        <Modal.Actions>\n          <Button type=\"submit\" color=\"red\" icon=\"times\" content=\"Close\" />\n          <Button type=\"submit\" color=\"green\" icon=\"save\" content=\"Save\" />\n        </Modal.Actions>\n      </Modal>\n      );\n      {/* <Form onSubmit={handleLogin}>\n        <Form.Field>\n          <label>Email</label>\n          <input\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Password</label>\n          <input \n          placeholder=\"password\" \n          value={password}\n          onChange={(e) => setPassword(e.target.value)}/>\n        </Form.Field>\n        <Form.Field></Form.Field>\n        <Button type=\"submit\">Login</Button>\n      </Form> */}\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}