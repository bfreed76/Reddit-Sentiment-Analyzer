{"ast":null,"code":"import _slicedToArray from\"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext}from\"react\";import{Icon,Header}from\"semantic-ui-react\";import{Divider,Transition}from\"semantic-ui-react\";import{useHistory}from\"react-router-dom\";import{useState}from\"react\";import Profile from\"./Profile\";import LoginOrSignup from\"./LoginOrSignup\";import{Context}from\"../context/Context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HeaderComp=function HeaderComp(_ref){var handleLogout=_ref.handleLogout,findMe=_ref.findMe;var _useContext=useContext(Context),loggedin=_useContext.loggedin,setIsUpdating=_useContext.setIsUpdating;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],setVisible=_useState2[1];var history=useHistory();// Toggles profile/login visibility\nvar toggleVisibility=function toggleVisibility(){findMe();setVisible(!visible);};// Helper that toggles update state and visibility\nvar renderUpdatePage=function renderUpdatePage(){setIsUpdating(true);toggleVisibility();history.push(\"/signup\");};// Renders header, toggles profile and login/signup\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{as:\"h1\",children:/*#__PURE__*/_jsx(Header.Content,{children:/*#__PURE__*/_jsxs(\"div\",{as:\"h1.ui.header\",children:[/*#__PURE__*/_jsx(Icon,{name:\"reddit\"}),/*#__PURE__*/_jsx(\"big\",{children:\"Emot/r\"}),/*#__PURE__*/_jsx(Icon,{id:\"userIcon\",name:\"user outline\",onClick:toggleVisibility})]})})}),/*#__PURE__*/_jsx(Divider,{hidden:true}),/*#__PURE__*/_jsx(Transition,{visible:visible,animation:\"fade\",duration:300,children:/*#__PURE__*/_jsx(\"div\",{children:loggedin?/*#__PURE__*/_jsx(Profile,{handleLogout:handleLogout,renderUpdatePage:renderUpdatePage}):/*#__PURE__*/_jsx(LoginOrSignup,{})})})]});};export default HeaderComp;","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/HeaderComp.js"],"names":["React","useContext","Icon","Header","Divider","Transition","useHistory","useState","Profile","LoginOrSignup","Context","HeaderComp","handleLogout","findMe","loggedin","setIsUpdating","visible","setVisible","history","toggleVisibility","renderUpdatePage","push"],"mappings":"oJAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAT,CAAeC,MAAf,KAA6B,mBAA7B,CACA,OAASC,OAAT,CAAkBC,UAAlB,KAAoC,mBAApC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OAASC,OAAT,KAAwB,oBAAxB,C,wFAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA8B,IAA3BC,CAAAA,YAA2B,MAA3BA,YAA2B,CAAbC,MAAa,MAAbA,MAAa,CAC/C,gBAAoCZ,UAAU,CAACS,OAAD,CAA9C,CAAQI,QAAR,aAAQA,QAAR,CAAkBC,aAAlB,aAAkBA,aAAlB,CACA,cAA8BR,QAAQ,CAAC,KAAD,CAAtC,wCAAOS,OAAP,eAAgBC,UAAhB,eACA,GAAIC,CAAAA,OAAO,CAAGZ,UAAU,EAAxB,CAEA;AAEA,GAAMa,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BN,MAAM,GACNI,UAAU,CAAC,CAACD,OAAF,CAAV,CACD,CAHD,CAKA;AAEA,GAAMI,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BL,aAAa,CAAC,IAAD,CAAb,CACAI,gBAAgB,GAChBD,OAAO,CAACG,IAAR,CAAa,SAAb,EACD,CAJD,CAMA;AAEA,mBACE,oCACE,KAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,uBACE,KAAC,MAAD,CAAQ,OAAR,wBACE,aAAK,EAAE,CAAC,cAAR,wBACE,KAAC,IAAD,EAAM,IAAI,CAAC,QAAX,EADF,cAEE,+BAFF,cAGE,KAAC,IAAD,EAAM,EAAE,CAAC,UAAT,CAAoB,IAAI,CAAC,cAAzB,CAAwC,OAAO,CAAEF,gBAAjD,EAHF,GADF,EADF,EADF,cAUE,KAAC,OAAD,EAAS,MAAM,KAAf,EAVF,cAWE,KAAC,UAAD,EAAY,OAAO,CAAEH,OAArB,CAA8B,SAAS,CAAC,MAAxC,CAA+C,QAAQ,CAAE,GAAzD,uBACE,qBACGF,QAAQ,cACP,KAAC,OAAD,EAAS,YAAY,CAAEF,YAAvB,CAAqC,gBAAgB,CAAEQ,gBAAvD,EADO,cAGP,KAAC,aAAD,IAJJ,EADF,EAXF,GADF,CAuBD,CA7CD,CA+CA,cAAeT,CAAAA,UAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Icon, Header } from \"semantic-ui-react\";\nimport { Divider, Transition } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Profile from \"./Profile\";\nimport LoginOrSignup from \"./LoginOrSignup\";\nimport { Context } from \"../context/Context\";\n\nconst HeaderComp = ({ handleLogout, findMe }) => {\n  const { loggedin, setIsUpdating } = useContext(Context);\n  const [visible, setVisible] = useState(false);\n  let history = useHistory();\n\n  // Toggles profile/login visibility\n\n  const toggleVisibility = () => {\n    findMe();\n    setVisible(!visible);\n  };\n\n  // Helper that toggles update state and visibility\n\n  const renderUpdatePage = () => {\n    setIsUpdating(true);\n    toggleVisibility();\n    history.push(\"/signup\");\n  };\n\n  // Renders header, toggles profile and login/signup\n\n  return (\n    <div>\n      <Header as='h1'>\n        <Header.Content>\n          <div as='h1.ui.header'>\n            <Icon name='reddit' />\n            <big>Emot/r</big>\n            <Icon id='userIcon' name='user outline' onClick={toggleVisibility} />\n          </div>\n        </Header.Content>\n      </Header>\n      <Divider hidden />\n      <Transition visible={visible} animation='fade' duration={300}>\n        <div>\n          {loggedin ? (\n            <Profile handleLogout={handleLogout} renderUpdatePage={renderUpdatePage} />\n          ) : (\n            <LoginOrSignup />\n          )}\n        </div>\n      </Transition>\n    </div>\n  );\n};\n\nexport default HeaderComp;\n"]},"metadata":{},"sourceType":"module"}