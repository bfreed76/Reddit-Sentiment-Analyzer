{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/ResultsCard.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Card } from \"semantic-ui-react\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { List, Icon } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultsCard = ({\n  result\n}) => {\n  _s();\n\n  const {\n    results\n  } = useContext(Context);\n  const link = `http://www.reddit.com` + result.permalink;\n  return /*#__PURE__*/_jsxDEV(Card.Group, {\n    itemsPerRow: 1,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      centered: true,\n      href: link,\n      target: \"_blank\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        header: \"Author:  \" + result.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        textAlign: \"left\",\n        description: result.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: [\"Subreddit: \", result.subreddit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResultsCard, \"kLVloojG/Jp/WeCUR05dQ3SK0X0=\");\n\n_c = ResultsCard;\nexport default ResultsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsCard\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/ResultsCard.js"],"names":["Container","Card","React","useContext","useEffect","useState","List","Icon","Context","ResultsCard","result","results","link","permalink","author","body","subreddit"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,IAApB,QAA+B,mBAA/B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,oBAAxB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAcR,UAAU,CAACK,OAAD,CAA9B;AACA,QAAMI,IAAI,GAAI,uBAAD,GAA0BF,MAAM,CAACG,SAA9C;AAEA,sBACE,QAAC,IAAD,CAAM,KAAN;AAAY,IAAA,WAAW,EAAE,CAAzB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,IAAI,EAAED,IAArB;AAA2B,MAAA,MAAM,EAAC,QAAlC;AAAA,8BACE,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,MAAM,EAAE,cAAcF,MAAM,CAACI;AAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,SAAS,EAAC,MAAxB;AAA+B,QAAA,WAAW,EAAEJ,MAAM,CAACK;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,MAAnB;AAAA,kCAAgCL,MAAM,CAACM,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAdD;;GAAMP,W;;KAAAA,W;AAgBN,eAAeA,WAAf","sourcesContent":["import { Container, Card} from \"semantic-ui-react\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { List, Icon } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\n\nconst ResultsCard = ({ result }) => {\n  const { results } = useContext(Context);\n  const link = `http://www.reddit.com` + result.permalink;\n\n  return (\n    <Card.Group itemsPerRow={1}>\n      <Card centered href={link} target=\"_blank\">\n        <Card.Content header={\"Author:  \" + result.author} />\n        <Card.Content textAlign='left' description={result.body} />\n        <Card.Content extra>Subreddit: {result.subreddit}</Card.Content>\n      </Card>\n      <br></br>\n    </Card.Group>\n  );\n};\n\nexport default ResultsCard;\n"]},"metadata":{},"sourceType":"module"}