{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Button, Checkbox, Form, Input } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"./context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [sUsername, setSUsername] = useState(\"\");\n  const [subreddit, setSubreddit] = useState(\"\");\n  const [searchTerms, setSearchTerms] = useState(true);\n  const [targetTerms, setTargetTerms] = useState(\"\");\n  const [overallEmo, setOverallEmo] = useState(\"\");\n  const [overallSent, setOverallSent] = useState(\"\");\n  const [searchTarget, setSearchTarget] = useState(\"comment\");\n  const context = useContext(Context);\n  const {\n    user,\n    setUser,\n    loggedin,\n    setLoggedin\n  } = useContext(Context);\n  const history = useHistory();\n  let pushShiftURL = \"https://api.pushshift.io/reddit/search/\" + searchTarget + \"/?q=\" + searchTerms + \"&subreddit=\" + subreddit + \"&author=\" + sUsername + \"&fields=author,created_utc,body,score,subreddit,url,title,selftext\" + \"&size=\" + \"3\";\n\n  const handleSearch = e => {\n    e.preventDefault();\n    const postObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: user,\n        url: pushShiftURL,\n        sUsername,\n        subreddit,\n        searchTerms\n      })\n    };\n    fetch(\"/reddit\", postObj).then(res => res.json()).then(res => {\n      console.log(pushShiftURL);\n      console.log(res);\n      setOverallEmo(res.emotion.document.emotion);\n      setOverallSent(res.sentiment.document);\n      setTargetTerms(res.emotion.targets);\n      history.push(\"/results\");\n    }).catch(err => console.log(\"reddit get err = \", err));\n  };\n\n  const handleCheck = e => {\n    setSearchTarget(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSearch,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Reddit to discover emotional stuff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        label: \"Comments\",\n        radio: true,\n        id: \"comment\",\n        value: \"comment\",\n        checked: searchTarget === \"comment\",\n        onChange: handleCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        label: \"Submissions\",\n        radio: true,\n        id: \"submission\",\n        value: \"submission\",\n        checked: searchTarget == \"submission\",\n        onChange: handleCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        icon: \"search\",\n        iconPosition: \"left\",\n        placeholder: \"u/ username\",\n        onChange: e => setSUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        icon: \"search\",\n        iconPosition: \"left\",\n        placeholder: \"r/ subreddit\",\n        onChange: e => setSubreddit(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        icon: \"search\",\n        iconPosition: \"left\",\n        placeholder: \"search terms\",\n        onChange: e => setSearchTerms(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      primary: true,\n      type: \"submit\",\n      children: \"Go\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"bmBN3ZUIpcq9O4cnd6ggzmJObUE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/Search.js"],"names":["React","useState","useContext","Button","Checkbox","Form","Input","useHistory","Context","Search","sUsername","setSUsername","subreddit","setSubreddit","searchTerms","setSearchTerms","targetTerms","setTargetTerms","overallEmo","setOverallEmo","overallSent","setOverallSent","searchTarget","setSearchTarget","context","user","setUser","loggedin","setLoggedin","history","pushShiftURL","handleSearch","e","preventDefault","postObj","method","headers","body","JSON","stringify","url","fetch","then","res","json","console","log","emotion","document","sentiment","targets","push","catch","err","handleCheck","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Button, Checkbox, Form, Input } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"./context/Context\";\n\nconst Search = () => {\n  const [sUsername, setSUsername] = useState(\"\");\n  const [subreddit, setSubreddit] = useState(\"\");\n  const [searchTerms, setSearchTerms] = useState(true);\n  const [targetTerms, setTargetTerms] = useState(\"\");\n  const [overallEmo, setOverallEmo] = useState(\"\");\n  const [overallSent, setOverallSent] = useState(\"\");\n  const [searchTarget, setSearchTarget] = useState(\"comment\");\n  const context = useContext(Context);\n  const { user, setUser, loggedin, setLoggedin } = useContext(Context);\n  const history = useHistory();\n\n  let pushShiftURL =\n    \"https://api.pushshift.io/reddit/search/\" +\n    searchTarget +\n    \"/?q=\" +\n    searchTerms +\n    \"&subreddit=\" +\n    subreddit +\n    \"&author=\" +\n    sUsername +\n    \"&fields=author,created_utc,body,score,subreddit,url,title,selftext\" +\n    \"&size=\" +\n    \"3\";\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    const postObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: user,\n        url: pushShiftURL,\n        sUsername,\n        subreddit,\n        searchTerms,\n      }),\n    };\n    fetch(\"/reddit\", postObj)\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(pushShiftURL);\n        console.log(res);\n        setOverallEmo(res.emotion.document.emotion);\n        setOverallSent(res.sentiment.document);\n        setTargetTerms(res.emotion.targets);\n        history.push(\"/results\");\n      })\n      .catch((err) => console.log(\"reddit get err = \", err));\n  };\n\n  const handleCheck = (e) => {\n    setSearchTarget(e.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleSearch}>\n      <h2>Search Reddit to discover emotional stuff</h2>\n      <Form.Field>\n        <Checkbox\n          label='Comments'\n          radio\n          id='comment'\n          value='comment'\n          checked={searchTarget === \"comment\"}\n          onChange={handleCheck}\n        />\n        <Checkbox\n          label='Submissions'\n          radio\n          id='submission'\n          value='submission'\n          checked={searchTarget == \"submission\"}\n          onChange={handleCheck}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Input\n          icon='search'\n          iconPosition='left'\n          placeholder='u/ username'\n          onChange={(e) => setSUsername(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Input\n          icon='search'\n          iconPosition='left'\n          placeholder='r/ subreddit'\n          onChange={(e) => setSubreddit(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Input\n          icon='search'\n          iconPosition='left'\n          placeholder='search terms'\n          onChange={(e) => setSearchTerms(e.target.value)}\n        />\n      </Form.Field>\n      <br></br>\n      <Button primary type='submit'>\n        Go\n      </Button>\n    </Form>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}