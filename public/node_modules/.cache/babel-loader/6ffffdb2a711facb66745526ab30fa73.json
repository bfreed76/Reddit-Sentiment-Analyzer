{"ast":null,"code":"import _slicedToArray from\"/home/brinton/Development/School/Phase5/Reddit-Sentiment-Analyzer/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from\"react\";import{Context}from\"../context/Context\";import{useHistory}from\"react-router-dom\";import{Button,Form}from\"semantic-ui-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Signup=function Signup(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var history=useHistory();var _useContext=useContext(Context),user=_useContext.user,setUser=_useContext.setUser,loggedin=_useContext.loggedin,setLoggedin=_useContext.setLoggedin,isUpdating=_useContext.isUpdating,setIsUpdating=_useContext.setIsUpdating;// Sets local state to global state on component render\nuseEffect(function(){setUsername(user.username);setEmail(user.email);},[user.username,user.email]);// Handles signup with input error handling\nvar handleSignup=function handleSignup(e){e.preventDefault();if(!username||!email||!password){return console.log(\"field(s) missing\");}fetch(\"/api/signup\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username:username,email:email,password:password})}).then(function(r){return r.json();}).then(function(user){console.log(user);setUser(user);setLoggedin(true);history.push(\"success\");}).catch(function(err){return console.log(err);});};// Handles update of user profile information\nvar handleUpdate=function handleUpdate(e){e.preventDefault();fetch(\"/api/update\",{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username:username,email:email})}).then(function(res){return res.json();}).then(function(res){setIsUpdating(false);history.push(\"success\");}).catch(function(err){return console.log(\"Update err = \",err);});};// Renders either login or signup information depending on state\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[!loggedin?setIsUpdating(false):null,/*#__PURE__*/_jsxs(Form,{onSubmit:handleSignup,children:[/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Username\",value:username,onChange:function onChange(e){return setUsername(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),isUpdating?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"h3\",{children:\"Please enter new username or email.\"})}):/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Field,{}),isUpdating?/*#__PURE__*/_jsx(Button,{primary:true,onClick:handleUpdate,children:\"Update\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{style:{textAlign:\"right\"},children:\"* All fields required\"}),/*#__PURE__*/_jsx(Button,{primary:true,type:\"submit\",children:\"Signup\"})]})]})]});};export default Signup;","map":{"version":3,"sources":["/home/brinton/Development/School/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/Signup.js"],"names":["React","useState","useContext","useEffect","Context","useHistory","Button","Form","Signup","username","setUsername","email","setEmail","password","setPassword","history","user","setUser","loggedin","setLoggedin","isUpdating","setIsUpdating","handleSignup","e","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","r","json","push","catch","err","handleUpdate","res","target","value","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { Context } from \"../context/Context\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Form } from \"semantic-ui-react\";\n\nconst Signup = () => {\n  const [username, setUsername] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const { user, setUser, loggedin, setLoggedin, isUpdating, setIsUpdating } = useContext(Context);\n\n  // Sets local state to global state on component render\n\n  useEffect(() => {\n    setUsername(user.username);\n    setEmail(user.email);\n  }, [user.username, user.email]);\n\n  // Handles signup with input error handling\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n    if (!username || !email || !password) {\n      return console.log(\"field(s) missing\");\n    }\n    fetch(\"/api/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, email, password }),\n    })\n      .then((r) => r.json())\n      .then((user) => {\n        console.log(user);\n        setUser(user);\n        setLoggedin(true);\n        history.push(\"success\");\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // Handles update of user profile information\n\n  const handleUpdate = (e) => {\n    e.preventDefault();\n    fetch(\"/api/update\", {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ username, email }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setIsUpdating(false);\n        history.push(\"success\");\n      })\n      .catch((err) => console.log(\"Update err = \", err));\n  };\n\n  // Renders either login or signup information depending on state\n\n  return (\n    <div>\n      {!loggedin ? setIsUpdating(false) : null}\n      <Form onSubmit={handleSignup}>\n        <Form.Field>\n          <label>Username</label>\n          <input\n            placeholder='Username'\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Email</label>\n          <input placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\n        </Form.Field>\n        {isUpdating ? (\n          <>\n            <h3>Please enter new username or email.</h3>\n          </>\n        ) : (\n          <Form.Field>\n            <label>Password</label>\n            <input\n              placeholder='password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Field>\n        )}\n        <Form.Field></Form.Field>\n        {isUpdating ? (\n          <Button primary onClick={handleUpdate}>\n            Update\n          </Button>\n        ) : (\n          <>\n            <p style={{ textAlign: \"right\" }}>* All fields required</p>\n            <Button primary type='submit'>\n              Signup\n            </Button>\n          </>\n        )}\n      </Form>\n    </div>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}