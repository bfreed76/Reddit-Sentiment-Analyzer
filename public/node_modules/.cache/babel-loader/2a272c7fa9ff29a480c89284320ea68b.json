{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/ResultsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { List } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\nimport EmoDocResults from \"./EmoDocResults\";\nimport EmoTargResults from \"./EmoTargResults\";\nimport ResultsHeader from \"./ResultsHeader\";\nimport ResultsCard from \"./ResultsCard\";\nimport { Container, Card, Feed } from \"semantic-ui-react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResultsContainer = () => {\n  _s();\n\n  const {\n    user,\n    results\n  } = useContext(Context);\n  const {\n    author,\n    body,\n    subreddit\n  } = results.data;\n  const items = [//dummy data\n  {\n    header: \"Project Report - April\",\n    description: \"Leverage agile frameworks to provide a robust synopsis for high level overviews.\",\n    meta: \"ROI: 30%\"\n  }, {\n    header: \"Project Report - May\",\n    description: \"Bring to the table win-win survival strategies to ensure proactive domination.\",\n    meta: \"ROI: 34%\"\n  }, {\n    header: \"Project Report - June\",\n    description: \"Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.\",\n    meta: \"ROI: 27%\"\n  }]; //TODO: error handling if no data reutrned\n  // debugger;\n\n  const renderCards = () => {\n    /*#__PURE__*/\n    _jsxDEV(ResultsHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this);\n\n    results.data.map(result => {\n      return /*#__PURE__*/_jsxDEV(ResultsCard, {\n        result: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results\",\n    children: [!!results ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ResultsHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Results not available. Please try your search again. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), renderCards()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResultsContainer, \"xbRnQvo8vFws0558jDo9enGAvjw=\");\n\n_c = ResultsContainer;\nexport default ResultsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsContainer\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/ResultsContainer.js"],"names":["React","useContext","useEffect","useState","List","Context","EmoDocResults","EmoTargResults","ResultsHeader","ResultsCard","Container","Card","Feed","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","ResultsContainer","user","results","author","body","subreddit","data","items","header","description","meta","renderCards","map","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,QAAsC,mBAAtC;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,KAJF,EAKEC,aALF,EAMEC,OANF,EAOEC,MAPF,EAQEC,mBARF,QASO,UATP;;;AAWA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBtB,UAAU,CAACI,OAAD,CAApC;AACA,QAAM;AAAEmB,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,MAA8BH,OAAO,CAACI,IAA5C;AACA,QAAMC,KAAK,GAAG,CACZ;AACA;AACEC,IAAAA,MAAM,EAAE,wBADV;AAEEC,IAAAA,WAAW,EACT,kFAHJ;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAFY,EAQZ;AACEF,IAAAA,MAAM,EAAE,sBADV;AAEEC,IAAAA,WAAW,EAAE,gFAFf;AAGEC,IAAAA,IAAI,EAAE;AAHR,GARY,EAaZ;AACEF,IAAAA,MAAM,EAAE,uBADV;AAEEC,IAAAA,WAAW,EACT,2FAHJ;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAbY,CAAd,CAH6B,CAwB7B;AACA;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB;AAAA,YAAC,aAAD;AAAA;AAAA;AAAA;AAAA;;AACAT,IAAAA,OAAO,CAACI,IAAR,CAAaM,GAAb,CAAkBC,MAAD,IAAY;AACzB,0BAAO,QAAC,WAAD;AAAa,QAAA,MAAM,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD;AAGH,GALC;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eACG,CAAC,CAACX,OAAF,gBACC;AAAA,6BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EASKS,WAAW,EAThB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA/CD;;GAAMX,gB;;KAAAA,gB;AAiDN,eAAeA,gBAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { List } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\nimport EmoDocResults from \"./EmoDocResults\";\nimport EmoTargResults from \"./EmoTargResults\";\nimport ResultsHeader from \"./ResultsHeader\";\nimport ResultsCard from \"./ResultsCard\";\nimport { Container, Card, Feed } from \"semantic-ui-react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst ResultsContainer = () => {\n  const { user, results } = useContext(Context);\n  const { author, body, subreddit } = results.data;\n  const items = [\n    //dummy data\n    {\n      header: \"Project Report - April\",\n      description:\n        \"Leverage agile frameworks to provide a robust synopsis for high level overviews.\",\n      meta: \"ROI: 30%\",\n    },\n    {\n      header: \"Project Report - May\",\n      description: \"Bring to the table win-win survival strategies to ensure proactive domination.\",\n      meta: \"ROI: 34%\",\n    },\n    {\n      header: \"Project Report - June\",\n      description:\n        \"Capitalise on low hanging fruit to identify a ballpark value added activity to beta test.\",\n      meta: \"ROI: 27%\",\n    },\n  ];\n\n  //TODO: error handling if no data reutrned\n  // debugger;\n\n  const renderCards = () => {\n    <ResultsHeader />\n    results.data.map((result) => {\n        return <ResultsCard result={result} />\n    })\n}\n\n  return (\n    <div className='results'>\n      {!!results ? (\n        <div>\n          <ResultsHeader />\n          {/* <ResultsCard /> */}\n        </div>\n      ) : (\n        <h3>Results not available. Please try your search again. </h3>\n        )}\n        {renderCards()}\n    </div>\n  );\n};\n\nexport default ResultsContainer;\n"]},"metadata":{},"sourceType":"module"}