{"ast":null,"code":"import _slicedToArray from\"/home/brinton/Development/School/Phase5/Reddit-Sentiment-Analyzer/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import{Button,Form,Input,Dimmer,Loader,Segment}from\"semantic-ui-react\";import{useHistory}from\"react-router-dom\";import{Context}from\"../context/Context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Search=function Search(){var history=useHistory();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setloading=_useState4[1];var _useContext=useContext(Context),user=_useContext.user,setResults=_useContext.setResults,sUsername=_useContext.sUsername,setSUsername=_useContext.setSUsername,subreddit=_useContext.subreddit,setSubreddit=_useContext.setSubreddit,searchTerms=_useContext.searchTerms,setSearchTerms=_useContext.setSearchTerms,searchTarget=_useContext.searchTarget;// Builds URL for pushshift api request\nvar pushShiftURL=\"https://api.pushshift.io/reddit/search/\"+searchTarget+\"/?q=\"+searchTerms+\"&subreddit=\"+subreddit+\"&author=\"+sUsername+\"&fields=author,created_utc,body,score,subreddit,url,title,selftext,permalink\"+\"&size=\"+\"50\";// Sends state (Reddit search) to backend for fetch from pushshift api and Watson analysis\nvar handleSearch=function handleSearch(e){e.preventDefault();setloading(true);var postObj={method:\"POST\",headers:{\"Content-type\":\"application/json\"},body:JSON.stringify({user:user,url:pushShiftURL,sUsername:sUsername,subreddit:subreddit,searchTerms:searchTerms})};fetch(\"/api/reddit\",postObj).then(function(res){if(res.ok){res.json().then(function(res){setResults(res);setError(false);history.push(\"/results\");});}else{res.json().then(function(errorData){console.log(\"error = \",errorData.errors);setError(true);});}});};// Landing page with search forms and error handling\nreturn/*#__PURE__*/_jsxs(Segment,{children:[loading?/*#__PURE__*/_jsx(Dimmer,{active:true,inverted:true,children:/*#__PURE__*/_jsx(Loader,{children:\"Analyzing...\"})}):null,/*#__PURE__*/_jsxs(Form,{onSubmit:handleSearch,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Discover emotional content on Reddit.\"}),/*#__PURE__*/_jsx(Form.Field,{children:/*#__PURE__*/_jsx(Input,{icon:\"search\",iconPosition:\"left\",placeholder:\"u/ username\",value:sUsername,onChange:function onChange(e){return setSUsername(e.target.value);}})}),/*#__PURE__*/_jsx(Form.Field,{children:/*#__PURE__*/_jsx(Input,{icon:\"search\",iconPosition:\"left\",placeholder:\"r/ subreddit\",value:subreddit,onChange:function onChange(e){return setSubreddit(e.target.value);}})}),/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(Input,{icon:\"search\",iconPosition:\"left\",placeholder:\"search terms\",value:searchTerms,onChange:function onChange(e){return setSearchTerms(e.target.value);}}),error?/*#__PURE__*/_jsx(\"h4\",{style:{color:\"red\"},children:\"No Results Found. Please Search Again.\"}):null]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{primary:true,type:\"submit\",children:\"Search\"})]})]});};export default Search;","map":{"version":3,"sources":["/home/brinton/Development/School/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/Search.js"],"names":["React","useState","useContext","Button","Form","Input","Dimmer","Loader","Segment","useHistory","Context","Search","history","error","setError","loading","setloading","user","setResults","sUsername","setSUsername","subreddit","setSubreddit","searchTerms","setSearchTerms","searchTarget","pushShiftURL","handleSearch","e","preventDefault","postObj","method","headers","body","JSON","stringify","url","fetch","then","res","ok","json","push","errorData","console","log","errors","target","value","color"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Button, Form, Input, Dimmer, Loader, Segment } from \"semantic-ui-react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Context } from \"../context/Context\";\n\nconst Search = () => {\n  const history = useHistory();\n  const [error, setError] = useState(false);\n  const [loading, setloading] = useState(false);\n  const {\n    user,\n    setResults,\n    sUsername,\n    setSUsername,\n    subreddit,\n    setSubreddit,\n    searchTerms,\n    setSearchTerms,\n    searchTarget,\n  } = useContext(Context);\n\n  // Builds URL for pushshift api request\n\n  let pushShiftURL =\n    \"https://api.pushshift.io/reddit/search/\" +\n    searchTarget +\n    \"/?q=\" +\n    searchTerms +\n    \"&subreddit=\" +\n    subreddit +\n    \"&author=\" +\n    sUsername +\n    \"&fields=author,created_utc,body,score,subreddit,url,title,selftext,permalink\" +\n    \"&size=\" +\n    \"50\";\n\n  // Sends state (Reddit search) to backend for fetch from pushshift api and Watson analysis\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    setloading(true);\n    const postObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: user,\n        url: pushShiftURL,\n        sUsername,\n        subreddit,\n        searchTerms,\n      }),\n    };\n    fetch(\"/api/reddit\", postObj).then((res) => {\n      if (res.ok) {\n        res.json().then((res) => {\n          setResults(res);\n          setError(false);\n          history.push(\"/results\");\n        });\n      } else {\n        res.json().then((errorData) => {\n          console.log(\"error = \", errorData.errors);\n          setError(true);\n        });\n      }\n    });\n  };\n\n  // Landing page with search forms and error handling\n\n  return (\n    <Segment>\n      {loading ? (\n        <Dimmer active inverted>\n          <Loader>Analyzing...</Loader>\n        </Dimmer>\n      ) : null}\n      <Form onSubmit={handleSearch}>\n        <h2>Discover emotional content on Reddit.</h2>\n        <Form.Field>\n          <Input\n            icon='search'\n            iconPosition='left'\n            placeholder='u/ username'\n            value={sUsername}\n            onChange={(e) => setSUsername(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            icon='search'\n            iconPosition='left'\n            placeholder='r/ subreddit'\n            value={subreddit}\n            onChange={(e) => setSubreddit(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            icon='search'\n            iconPosition='left'\n            placeholder='search terms'\n            value={searchTerms}\n            onChange={(e) => setSearchTerms(e.target.value)}\n          />\n          {error ? <h4 style={{ color: \"red\" }}>No Results Found. Please Search Again.</h4> : null}\n        </Form.Field>\n        <br></br>\n        <Button primary type='submit'>\n          Search\n        </Button>\n      </Form>\n    </Segment>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}