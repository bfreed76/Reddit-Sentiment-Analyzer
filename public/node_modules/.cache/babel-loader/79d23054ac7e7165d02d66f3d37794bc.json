{"ast":null,"code":"var _jsxFileName = \"/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoTargResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\nimport { LineChart, BarChart, Bar, Cell, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EmoTargResults = ({\n  emoDoc,\n  targ\n}) => {\n  _s();\n\n  const {\n    user,\n    results\n  } = useContext(Context);\n  const {\n    sadness,\n    joy,\n    fear,\n    disgust,\n    anger\n  } = targ.emotion;\n  const data = [{\n    name: \"sadness\",\n    uv: sadness\n  }, {\n    name: \"joy\",\n    uv: joy\n  }, {\n    name: \"fear\",\n    uv: fear\n  }, {\n    name: \"disgust\",\n    uv: disgust\n  }, {\n    name: \"anger\",\n    uv: anger\n  }];\n\n  const renderBarChart = /*#__PURE__*/_jsxDEV(BarChart, {\n    width: 290,\n    height: 200,\n    data: data,\n    margin: {\n      top: 5,\n      right: 5,\n      left: 15,\n      bottom: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      strokeDasharray: \"3 3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      dataKey: \"name\",\n      fontSize: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: \"uv\",\n      fill: \"#3884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\\"Emotional scores for \\\"\", targ.text, \"\\\" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), renderBarChart]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EmoTargResults, \"xbRnQvo8vFws0558jDo9enGAvjw=\");\n\n_c = EmoTargResults;\nexport default EmoTargResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmoTargResults\");","map":{"version":3,"sources":["/home/brinton/Development/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/EmoTargResults.js"],"names":["React","useContext","Container","Context","LineChart","BarChart","Bar","Cell","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","EmoTargResults","emoDoc","targ","user","results","sadness","joy","fear","disgust","anger","emotion","data","name","uv","renderBarChart","top","right","left","bottom","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SACEC,SADF,EAEEC,QAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,KAPF,EAQEC,aARF,EASEC,OATF,EAUEC,MAVF,EAWEC,mBAXF,QAYO,UAZP;;;AAcA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAsB;AAAA;;AAC3C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBlB,UAAU,CAACE,OAAD,CAApC;AAEF,QAAM;AAACiB,IAAAA,OAAD;AAAUC,IAAAA,GAAV;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA,OAArB;AAA8BC,IAAAA;AAA9B,MAAuCP,IAAI,CAACQ,OAAlD;AAEE,QAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,EAAE,EAAER;AAAvB,GADW,EAEX;AAAEO,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,EAAE,EAAEP;AAAnB,GAFW,EAGX;AAAEM,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,EAAE,EAAEN;AAApB,GAHW,EAIX;AAAEK,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,EAAE,EAAEL;AAAvB,GAJW,EAKX;AAAEI,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,EAAE,EAAEJ;AAArB,GALW,CAAb;;AAQA,QAAMK,cAAc,gBAClB,QAAC,QAAD;AACE,IAAA,KAAK,EAAE,GADT;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,IAAI,EAAEH,IAHR;AAIE,IAAA,MAAM,EAAE;AACNI,MAAAA,GAAG,EAAE,CADC;AAENC,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,MAAM,EAAE;AAJF,KAJV;AAAA,4BAUE,QAAC,aAAD;AAAe,MAAA,eAAe,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,QAAQ;AAA9B;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,IAAb;AAAkB,MAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAmBA,sBACE;AAAA,4BACE;AAAA,8CAA2BhB,IAAI,CAACiB,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtCD;;GAAMd,c;;KAAAA,c;AAwCN,eAAeA,cAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\nimport {\n  LineChart,\n  BarChart,\n  Bar,\n  Cell,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst EmoTargResults = ({ emoDoc, targ }) => {\n  const { user, results } = useContext(Context);\n\nconst {sadness, joy, fear, disgust, anger} = targ.emotion\n\n  const data = [\n    { name: \"sadness\", uv: sadness },\n    { name: \"joy\", uv: joy },\n    { name: \"fear\", uv: fear },\n    { name: \"disgust\", uv: disgust },\n    { name: \"anger\", uv: anger },\n  ];\n\n  const renderBarChart = (\n    <BarChart\n      width={290}\n      height={200}\n      data={data}\n      margin={{\n        top: 5,\n        right: 5,\n        left: 15,\n        bottom: 5,\n      }}>\n      <CartesianGrid strokeDasharray='3 3' />\n      <XAxis dataKey='name' fontSize/>\n      <YAxis />\n      <Tooltip />\n      <Bar dataKey='uv' fill='#3884d8' />\n    </BarChart>\n  );\n\n  return (\n    <div>\n      <p>\"Emotional scores for \"{targ.text}\" </p>\n      {renderBarChart}\n    </div>\n  );\n};\n\nexport default EmoTargResults;\n"]},"metadata":{},"sourceType":"module"}