{"ast":null,"code":"import _slicedToArray from\"/home/brinton/Development/School/Phase5/Reddit-Sentiment-Analyzer/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import{useHistory}from\"react-router-dom\";import{Form,Button}from\"semantic-ui-react\";import{Context}from\"../context/Context\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),success=_useState6[0],setSuccess=_useState6[1];var _useContext=useContext(Context),setUser=_useContext.setUser,setLoggedin=_useContext.setLoggedin,setIsUpdating=_useContext.setIsUpdating;var history=useHistory();// Login\nvar handleLogin=function handleLogin(e){e.preventDefault();var postObj={method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})};fetch(\"/api/login\",postObj).then(function(r){return r.json();}).then(function(user){//user true or not?!\nconsole.log(\"USER\",user);if(!!user.id){setUser(user);setLoggedin(true);setSuccess(true);history.push(\"success\");}else{setSuccess(false);}}).catch(function(err){return console.log(err);});};// Renders forms with toggle for signin/signup\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[setIsUpdating(false),/*#__PURE__*/_jsxs(Form,{onSubmit:handleLogin,children:[/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Field,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"password\",type:\"password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),success?null:/*#__PURE__*/_jsx(\"h3\",{className:\"Alert\",children:\"Wrong email or password.\"}),/*#__PURE__*/_jsx(Button,{primary:true,type:\"submit\",children:\"Login\"})]})]});};export default Login;","map":{"version":3,"sources":["/home/brinton/Development/School/Phase5/Reddit-Sentiment-Analyzer/client/src/Components/Login.js"],"names":["React","useState","useContext","useHistory","Form","Button","Context","Login","email","setEmail","password","setPassword","success","setSuccess","setUser","setLoggedin","setIsUpdating","history","handleLogin","e","preventDefault","postObj","method","headers","body","JSON","stringify","fetch","then","r","json","user","console","log","id","push","catch","err","target","value"],"mappings":"2JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,IAAT,CAAeC,MAAf,KAA6B,mBAA7B,CACA,OAASC,OAAT,KAAwB,oBAAxB,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,cAA0BN,QAAQ,CAAC,EAAD,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eACA,eAAgCR,QAAQ,CAAC,EAAD,CAAxC,yCAAOS,QAAP,eAAiBC,WAAjB,eACA,eAA8BV,QAAQ,CAAC,IAAD,CAAtC,yCAAOW,OAAP,eAAgBC,UAAhB,eACA,gBAAgDX,UAAU,CAACI,OAAD,CAA1D,CAAQQ,OAAR,aAAQA,OAAR,CAAiBC,WAAjB,aAAiBA,WAAjB,CAA8BC,aAA9B,aAA8BA,aAA9B,CACA,GAAIC,CAAAA,OAAO,CAAGd,UAAU,EAAxB,CAEA;AAEA,GAAMe,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,OAAO,CAAG,CACdC,MAAM,CAAE,MADM,CAEdC,OAAO,CAAE,CACP,eAAgB,kBADT,CAFK,CAKdC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAElB,KAAK,CAALA,KAAF,CAASE,QAAQ,CAARA,QAAT,CAAf,CALQ,CAAhB,CAOAiB,KAAK,CAAC,YAAD,CAAeN,OAAf,CAAL,CACGO,IADH,CACQ,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,EAAP,EADR,EAEGF,IAFH,CAEQ,SAACG,IAAD,CAAU,CACd;AACAC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAoBF,IAApB,EACA,GAAI,CAAC,CAACA,IAAI,CAACG,EAAX,CAAe,CACbpB,OAAO,CAACiB,IAAD,CAAP,CACAhB,WAAW,CAAC,IAAD,CAAX,CACAF,UAAU,CAAC,IAAD,CAAV,CACAI,OAAO,CAACkB,IAAR,CAAa,SAAb,EACD,CALD,IAKO,CACLtB,UAAU,CAAC,KAAD,CAAV,CACD,CACF,CAbH,EAcGuB,KAdH,CAcS,SAACC,GAAD,QAASL,CAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ,CAAT,EAdT,EAeD,CAxBD,CA0BA;AACA,mBACE,uBACGrB,aAAa,CAAC,KAAD,CADhB,cAEE,MAAC,IAAD,EAAM,QAAQ,CAAEE,WAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,yBACE,gCADF,cAEE,cAAO,WAAW,CAAC,OAAnB,CAA2B,KAAK,CAAEV,KAAlC,CAAyC,QAAQ,CAAE,kBAACW,CAAD,QAAOV,CAAAA,QAAQ,CAACU,CAAC,CAACmB,MAAF,CAASC,KAAV,CAAf,EAAnD,EAFF,GADF,cAKE,MAAC,IAAD,CAAM,KAAN,yBACE,mCADF,cAEE,cACE,WAAW,CAAC,UADd,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAE7B,QAHT,CAIE,QAAQ,CAAE,kBAACS,CAAD,QAAOR,CAAAA,WAAW,CAACQ,CAAC,CAACmB,MAAF,CAASC,KAAV,CAAlB,EAJZ,EAFF,GALF,CAcG3B,OAAO,CAAG,IAAH,cAAU,WAAI,SAAS,CAAC,OAAd,sCAdpB,cAeE,KAAC,MAAD,EAAQ,OAAO,KAAf,CAAgB,IAAI,CAAC,QAArB,mBAfF,GAFF,GADF,CAwBD,CA5DD,CA8DA,cAAeL,CAAAA,KAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button } from \"semantic-ui-react\";\nimport { Context } from \"../context/Context\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [success, setSuccess] = useState(true);\n  const { setUser, setLoggedin, setIsUpdating } = useContext(Context);\n  let history = useHistory();\n\n  // Login\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const postObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, password }),\n    };\n    fetch(\"/api/login\", postObj)\n      .then((r) => r.json())\n      .then((user) => {\n        //user true or not?!\n        console.log(\"USER\", user)\n        if (!!user.id) {\n          setUser(user);\n          setLoggedin(true);\n          setSuccess(true);\n          history.push(\"success\");\n        } else {\n          setSuccess(false);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // Renders forms with toggle for signin/signup\n  return (\n    <div>\n      {setIsUpdating(false)}\n      <Form onSubmit={handleLogin}>\n        <Form.Field>\n          <label>Email</label>\n          <input placeholder='Email' value={email} onChange={(e) => setEmail(e.target.value)} />\n        </Form.Field>\n        <Form.Field>\n          <label>Password</label>\n          <input\n            placeholder='password'\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Field>\n        {success ? null : <h3 className='Alert'>Wrong email or password.</h3>}\n        <Button primary type='submit'>\n          Login\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}